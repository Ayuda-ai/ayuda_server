"(:Course {course_id: CSYE7224, major: CSYE, updated_at: 2025-07-05T21:25:56.413000000Z, credits: 3, name: Engineering Reliable, Scalable, and Maintainable Distributed Systems, description: Covers repeatable, generic software design patterns such as sidecar, ambassador, adapter, event driven, stream and batch processing, containers and container orchestration, replication, partitioning, transactions, consistency, and consensus to help make the development of reliable distributed systems more approachable and efficient. Studies the common language and framework these patterns provide. Microservices, containers, and container orchestration have fundamentally changed how distributed systems are developed. Designed to find ways of thinking about distributed systems€”not just how they work, but also why they work, and what questions we need to ask. Offers students an opportunity to decide which kind of technology is appropriate for which purpose and to understand how these patterns can be combined to form the foundation of a sound application architecture., domains: [Software Development, nan], skills_associated: [ai, containers, operating systems, software design], id: e380834c-484b-4191-847c-2b6b6dabf69a})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6225, major: CSYE, updated_at: 2025-07-05T21:25:55.918000000Z, credits: 3, name: Network Structures and Cloud Computing, description: Offers a practical foundation in cloud computing and hands-on experience with the tools used in cloud computing. Designed as a foundation course for cloud-aware, adept professionals. Focuses on the fundamentals of cloud computing, the principal areas of cloud architectures, cloud security, cloud governance, cloud storage, cloud virtualization, and cloud capacity. Discusses the Internet evolution that led to cloud and how cloud applications revolutionized Web applications., domains: [Cloud Computing, Software Development], skills_associated: [cloud computing, networking, security, software design, web development], id: 5ee36a01-7057-4bd7-a167-7da510856953})"
"(:Course {course_id: CSYE7125, major: CSYE, updated_at: 2025-07-05T21:25:56.517000000Z, credits: 3, name: Advanced Cloud Computing, description: Examines a collection of repeatable, generic software design patterns such as sidecar pattern, ambassador pattern, adapter pattern, event driven, stream and batch processing, containers and container orchestration with Kubernetes, replication, partitioning, transactions, consistency, and consensus to help make the development of reliable distributed systems more approachable and efficient. Microservices, containers, and container orchestration have fundamentally changed how distributed systems are developed. Offers students an opportunity to determine which kind of technology is appropriate for which purpose and to understand how these patterns can be combined to form the foundation of a good application architecture., domains: [Cloud Computing, Software Development], skills_associated: [ai, cloud computing, containers, operating systems, software design], id: 4cf15bc7-86f8-40b8-96a9-2bb48f421db9})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6225, major: CSYE, updated_at: 2025-07-05T21:25:55.918000000Z, credits: 3, name: Network Structures and Cloud Computing, description: Offers a practical foundation in cloud computing and hands-on experience with the tools used in cloud computing. Designed as a foundation course for cloud-aware, adept professionals. Focuses on the fundamentals of cloud computing, the principal areas of cloud architectures, cloud security, cloud governance, cloud storage, cloud virtualization, and cloud capacity. Discusses the Internet evolution that led to cloud and how cloud applications revolutionized Web applications., domains: [Cloud Computing, Software Development], skills_associated: [cloud computing, networking, security, software design, web development], id: 5ee36a01-7057-4bd7-a167-7da510856953})"
"(:Course {course_id: CSYE7200, major: CSYE, updated_at: 2025-07-05T21:25:56.615000000Z, credits: 3, name: Big-Data System Engineering Using Scala, description: Covers the fundamentals of functional programming with Scala and seeks to provide a basic, practical foundation for students who want to use it as a language for working with big-data platforms. Scala is one of a new breed of general-purpose functional programming languages that is strongly typed and is object oriented. It runs on the Java virtual machine and is able to share libraries from the vast collection of open-source projects written in Java. For these reasons it is readily accessible by programmers of Java, C++, and similar languages., domains: [Software Development, Data], skills_associated: [java, operating systems], id: 7fbcaf47-4251-4148-ad19-4763f4377726})",null,null
"(:Course {course_id: CSYE7215, major: CSYE, updated_at: 2025-07-05T21:25:56.737000000Z, credits: 3, name: Foundations of Parallel, Concurrent, and Multithreaded Programming, description: Covers all aspects of concurrent program design, development, and implementation utilizing the Java multithreading API/facilities. Topics covered include thread safety and lifetime issues, block structured versus explicit synchronization, intrinsic versus explicit locking, thread pools, liveness issues, deadlock, livelock, race conditions, atomicity, performance and scalability, execution policies, test strategies. Major Java multithreading API/facilities covered include synchronized blocks, wait sets, intrinsic locks and condition variables, synchronized and concurrent collections, executor framework. Comparisons between the Java multithreading API and the Posix Pthreads multithreading standard are provided., domains: [Software Development, Advanced], skills_associated: [ai, api, concurrency, java, operating systems, performance], id: 592bdd45-e3a2-4b34-b3e1-fa47086f0cbb})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: CSYE7215, major: CSYE, updated_at: 2025-07-05T21:25:56.737000000Z, credits: 3, name: Foundations of Parallel, Concurrent, and Multithreaded Programming, description: Covers all aspects of concurrent program design, development, and implementation utilizing the Java multithreading API/facilities. Topics covered include thread safety and lifetime issues, block structured versus explicit synchronization, intrinsic versus explicit locking, thread pools, liveness issues, deadlock, livelock, race conditions, atomicity, performance and scalability, execution policies, test strategies. Major Java multithreading API/facilities covered include synchronized blocks, wait sets, intrinsic locks and condition variables, synchronized and concurrent collections, executor framework. Comparisons between the Java multithreading API and the Posix Pthreads multithreading standard are provided., domains: [Software Development, Advanced], skills_associated: [ai, api, concurrency, java, operating systems, performance], id: 592bdd45-e3a2-4b34-b3e1-fa47086f0cbb})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: CSYE7220, major: CSYE, updated_at: 2025-07-05T21:25:56.827000000Z, credits: 3, name: Deployment and Operation of Software Applications, description: Introduces the four most popular infrastructure languages€”Chef, Puppet, Ansible, and Salt€” and codes with them in the same way that we code with Java, Python, C#, and Javascript. IT infrastructure languages and their underlying methods and tools, referred to as DevOps, bridge the gap between software development and software administration. Instead of recruiting CPU cycles on our laptops, we create and manage virtual IT infrastructures on a public cloud. Offers students an opportunity to learn how to manipulate virtual machines, containers, and lambdas and set up assembly lines on public clouds in the fashion of a Model T assembly line., domains: [Software Development, nan], skills_associated: [ai, cloud computing, containers, devops, java, operating systems, python, user experience, web development], id: 7426ef44-642f-4028-81cd-724951d686c8})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6250, major: INFO, updated_at: 2025-07-05T21:25:58.993000000Z, credits: 3, name: Web Development Tools and Methods, description: Explores advanced server-side technologies and tools necessary to design and engineer complete web-based enterprise applications quickly. Designed to build on previous experience to cover the life cycle of a web-based application. Focuses on MVC web development frameworks to build server-side, data-intensive, and multitier web applications. Additionally, discusses designing rich internet applications (RIA) using AJAX and service-oriented architecture (SOA) using REST., domains: [Software Development, Web Development], skills_associated: [ai, api, backend, mvc, software design, user experience, web development], id: bf1d0a27-27fc-49a4-82a3-493fc7982b4e})"
"(:Course {course_id: CSYE7220, major: CSYE, updated_at: 2025-07-05T21:25:56.827000000Z, credits: 3, name: Deployment and Operation of Software Applications, description: Introduces the four most popular infrastructure languages€”Chef, Puppet, Ansible, and Salt€” and codes with them in the same way that we code with Java, Python, C#, and Javascript. IT infrastructure languages and their underlying methods and tools, referred to as DevOps, bridge the gap between software development and software administration. Instead of recruiting CPU cycles on our laptops, we create and manage virtual IT infrastructures on a public cloud. Offers students an opportunity to learn how to manipulate virtual machines, containers, and lambdas and set up assembly lines on public clouds in the fashion of a Model T assembly line., domains: [Software Development, nan], skills_associated: [ai, cloud computing, containers, devops, java, operating systems, python, user experience, web development], id: 7426ef44-642f-4028-81cd-724951d686c8})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: CSYE7374, major: CSYE, updated_at: 2025-07-05T21:25:56.917000000Z, credits: 3, name: Research Topics in AI, description: Research Topics in AI, domains: [AI/ML, Data], skills_associated: [ai, research], id: d27527d6-f904-46f2-8541-aaf21738d88b})",null,null
"(:Course {course_id: CSYE7230, major: CSYE, updated_at: 2025-07-05T21:25:57.026000000Z, credits: 3, name: Software Engineering, description: Looks at the software life cycle (requirements analysis and specification, software design, coding, testing, and maintenance). Offers verification, validation, and documentation at various stages of the life cycle. Covers the Unified Modeling Language as applied to the software life cycle. Covers applications of design patterns. Overviews user interface design, software metrics, and software development environments. Emphasis is on modular software construction and development of modular libraries. Requires a small software development project., domains: [Software Development, nan], skills_associated: [ai, software design, software engineering, testing, user experience], id: 8348acb6-d708-461f-9b86-4c953b23cec9})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: CSYE7230, major: CSYE, updated_at: 2025-07-05T21:25:57.026000000Z, credits: 3, name: Software Engineering, description: Looks at the software life cycle (requirements analysis and specification, software design, coding, testing, and maintenance). Offers verification, validation, and documentation at various stages of the life cycle. Covers the Unified Modeling Language as applied to the software life cycle. Covers applications of design patterns. Overviews user interface design, software metrics, and software development environments. Emphasis is on modular software construction and development of modular libraries. Requires a small software development project., domains: [Software Development, nan], skills_associated: [ai, software design, software engineering, testing, user experience], id: 8348acb6-d708-461f-9b86-4c953b23cec9})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: CSYE7235, major: CSYE, updated_at: 2025-07-05T21:25:57.118000000Z, credits: 3, name: Model-Driven Architecture, description: Develops the skills to utilize new software modeling and management techniques in each state of the life cycle of component-based software systems. Applies and extends a basic knowledge of the Unified Modeling Language (UML). Introduces and applies metamodel management concepts using the OMG metaobject facility as a technology baseline. Develops a component-based software project throughout the course using C++ or Java; grading primarily based on the software project and its public presentation., domains: [Software Development, nan], skills_associated: [java, machine learning, software design], id: 660acefc-075b-4401-a1d9-50a13955e36a})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: CSYE7270, major: CSYE, updated_at: 2025-07-05T21:25:57.201000000Z, credits: 3, name: Building Virtual Environments, description: Covers the basics of three-dimensional graphics programming using the Unity game engine. Includes a built-in terrain editor; a shader development facility; built-in physics; and advanced lighting, shadows, and audio to build 3D virtual environments and serious games. Javascript and C# can be used for scripting. Assets from various 3D modeling programs can be imported. Facilities to publish to the PC, Mac, iPhone and Wii and support for real-time multiplayer games are available. Requires a final project., domains: [Game Development, nan], skills_associated: [ai, java, user experience, web development], id: e1f56c54-c9d0-4c85-a973-dfe145e4e4a6})",null,null
"(:Course {course_id: CSYE7280, major: CSYE, updated_at: 2025-07-05T21:25:57.290000000Z, credits: 3, name: User Experience Design and Testing, description: Introduces user experience concepts while working on Web design projects. Offers students an opportunity to build the necessary skill sets to make better decisions when designing contemporary websites that cater to customer needs. Students practice interview techniques to understand user requirements while keeping user experience central to the effort. Uses wireframes and user scenarios to drive the creative design process. Various case studies are introduced and discussed in team settings to emphasize user perspectives. Uses quality assurance and usability testing to drive validation and user-acceptance testing and approvals., domains: [Software Development, Web Design], skills_associated: [mobile development, operating systems, testing, user experience, web development], id: 2562d642-3e65-4ac1-880f-85cabba7ce63})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: CSYE7280, major: CSYE, updated_at: 2025-07-05T21:25:57.290000000Z, credits: 3, name: User Experience Design and Testing, description: Introduces user experience concepts while working on Web design projects. Offers students an opportunity to build the necessary skill sets to make better decisions when designing contemporary websites that cater to customer needs. Students practice interview techniques to understand user requirements while keeping user experience central to the effort. Uses wireframes and user scenarios to drive the creative design process. Various case studies are introduced and discussed in team settings to emphasize user perspectives. Uses quality assurance and usability testing to drive validation and user-acceptance testing and approvals., domains: [Software Development, Web Design], skills_associated: [mobile development, operating systems, testing, user experience, web development], id: 2562d642-3e65-4ac1-880f-85cabba7ce63})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: CSYE7370, major: CSYE, updated_at: 2025-07-05T21:25:57.371000000Z, credits: 3, name: Deep Learning and Reinforcement Learning in Game Engineering, description: Introduces a deep learning and reinforcement learning framework for games called ML-Agents, which enable games and simulations to serve as environments for training intelligent agents. Studies and reviews classical game artificial intelligence (game AI), primarily search and decision trees. Uses game AI to generate responsive, adaptive, or intelligent behaviors primarily in nonplayer characters (NPCs) similar to human-like intelligence. Game AI includes everything from simple chasing and evading to pattern movement, to create opponents with complex tactical and strategic decisions., domains: [Game Development, AI/ML], skills_associated: [ai, machine learning], id: 06727601-f99a-49b4-adec-7b51ee91f4fc})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: CSYE7370, major: CSYE, updated_at: 2025-07-05T21:25:57.371000000Z, credits: 3, name: Deep Learning and Reinforcement Learning in Game Engineering, description: Introduces a deep learning and reinforcement learning framework for games called ML-Agents, which enable games and simulations to serve as environments for training intelligent agents. Studies and reviews classical game artificial intelligence (game AI), primarily search and decision trees. Uses game AI to generate responsive, adaptive, or intelligent behaviors primarily in nonplayer characters (NPCs) similar to human-like intelligence. Game AI includes everything from simple chasing and evading to pattern movement, to create opponents with complex tactical and strategic decisions., domains: [Game Development, AI/ML], skills_associated: [ai, machine learning], id: 06727601-f99a-49b4-adec-7b51ee91f4fc})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: CSYE7380, major: CSYE, updated_at: 2025-07-05T21:25:57.459000000Z, credits: 3, name: Theory and Practical Applications of AI Generative Modeling, description: Covers transformer-based language models (e.g. ChatGPT and Bard), generative image models (e.g., GAN and variational autoencoder), and generative models for structured data (e.g., Bayesian networks). Explores generative models for data of major modalities, namely, textual, image, and structured relational. Offers the opportunity to learn how to build such models for practical applications in different verticals using Python and numerous publicly available libraries in Keras/TensorFlow and Pytorch. Given recent surges in generative modeling tools, generative modeling technologies and applications are necessary skills for students entering the field of industrial data science., domains: [AI/ML, Data], skills_associated: [ai, data analysis, networking, python, user experience], id: bce71b39-2481-45db-bc68-66c9f9fe62e5})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: CSYE7470, major: CSYE, updated_at: 2025-07-05T21:25:57.544000000Z, credits: 3, name: Advanced Game Analytics, description: Explores the use of deep learning for the automated creation and analysis of game metrics. Uses convolutional neural networks (CNNs) to segment and identify anything on a game screen in real-time, which is used as input to AI systems. The second part of the course analyzes the importance of the metrics. Covers surrogate models, Shannon entropy, Individual Conditional Expectation (ICE), leave-one-covariate-out (LOCO), local feature importance, partial dependency plots, tree-based feature importance, standardized coefficient importance, accumulated local effects (ALE) plots, and Shapley values. Lastly, covers building predictive models with game data using the following techniques: supervised learning, generative/discriminative learning, parametric/nonparametric learning, neural networks, unsupervised learning reinforcement learning, and adaptive control., domains: [Game Development, Data], skills_associated: [ai, machine learning, networking, user experience], id: 2c8f3684-f307-4666-9ef2-213b4c1f7544})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6105, major: INFO, updated_at: 2025-07-05T21:25:58.334000000Z, credits: 3, name: Data Science Engineering Methods and Tools, description: Introduces the fundamental techniques for machine learning and data science engineering. Discusses a variety of machine learning algorithms, along with examples of their implementation, evaluation, and best practices. Lays the foundation of how learning models are derived from complex data pipelines, both algorithmically and practically. Topics include supervised learning (parametric/nonparametric algorithms, support vector machines, kernels, neural networks, deep learning) and unsupervised learning (clustering, dimensionality reduction, recommender systems). Based on numerous real-world case studies., domains: [Data, AI/ML], skills_associated: [data analysis, data structures, machine learning, networking], id: 0db048a9-3dcf-425e-adde-379b62f6c64d})"
"(:Course {course_id: CSYE7550, major: CSYE, updated_at: 2025-07-05T21:25:57.633000000Z, credits: 3, name: Distributed Intelligent Agents in the Metaverse, description: Introduces the field of agent-based computing as enablers of metaverse social avatar systems. Focuses on important aspects that shape the agents experience within the challenging virtual-reality design and engineering landscape. Covers personal space, personified locomotion, agent aesthetics, agent social interactions, and agents relation to blockchain decentralized virtual identity. Students engage in projects to deliver VR platforms applicable to engineering fields such as mechanical, civil, chemical, and bioengineering. Considers distributed learning applications and certification of credentials, as well. Offers students an opportunity to learn how to configure various agent types to construct virtual worlds bursting with lively agent interactive experiences that go far beyond the constraints of the physical reality., domains: [AI/ML, nan], skills_associated: [ai, blockchain], id: 597b587f-5023-401e-8ba3-4c4f41aaa4d6})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE7270, major: CSYE, updated_at: 2025-07-05T21:25:57.201000000Z, credits: 3, name: Building Virtual Environments, description: Covers the basics of three-dimensional graphics programming using the Unity game engine. Includes a built-in terrain editor; a shader development facility; built-in physics; and advanced lighting, shadows, and audio to build 3D virtual environments and serious games. Javascript and C# can be used for scripting. Assets from various 3D modeling programs can be imported. Facilities to publish to the PC, Mac, iPhone and Wii and support for real-time multiplayer games are available. Requires a final project., domains: [Game Development, nan], skills_associated: [ai, java, user experience, web development], id: e1f56c54-c9d0-4c85-a973-dfe145e4e4a6})"
"(:Course {course_id: CSYE7550, major: CSYE, updated_at: 2025-07-05T21:25:57.633000000Z, credits: 3, name: Distributed Intelligent Agents in the Metaverse, description: Introduces the field of agent-based computing as enablers of metaverse social avatar systems. Focuses on important aspects that shape the agents experience within the challenging virtual-reality design and engineering landscape. Covers personal space, personified locomotion, agent aesthetics, agent social interactions, and agents relation to blockchain decentralized virtual identity. Students engage in projects to deliver VR platforms applicable to engineering fields such as mechanical, civil, chemical, and bioengineering. Considers distributed learning applications and certification of credentials, as well. Offers students an opportunity to learn how to configure various agent types to construct virtual worlds bursting with lively agent interactive experiences that go far beyond the constraints of the physical reality., domains: [AI/ML, nan], skills_associated: [ai, blockchain], id: 597b587f-5023-401e-8ba3-4c4f41aaa4d6})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: CSYE7990, major: CSYE, updated_at: 2025-07-05T21:25:57.727000000Z, credits: 3, name: Thesis, description: Offers analytical and/or experimental work conducted under the direction of the faculty in fulfillment of the requirements for the degree. Requires first-year students to attend a graduate seminar program that introduces students to the methods of choosing a research topic, conducting research, and preparing a thesis. Requires successful completion of the seminar program. May be repeated without limit., domains: [Research, nan], skills_associated: [operating systems, user experience], id: 270d0e46-3197-48fc-ac01-d866e72e4392})",null,null
"(:Course {course_id: INFO5001, major: INFO, updated_at: 2025-07-05T21:25:57.859000000Z, credits: 3, name: Application Modeling and Design, description: Practices social-technical software engineering methods and tools to solve real-world problems. Explores innovative design and programming techniques to build significant business applications quickly. Studies the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user interface design principles, and programming languages such as Java, as well as productivity tools, to put together complicated, powerful business applications with ease. Explores the art of how to systematically write software programs to solve any business problem, through practicing simple and smart ways of making software programming enjoyable., domains: [Software Development, nan], skills_associated: [java, operating systems, software engineering, user experience], id: 3c1e04e5-3ed2-4bb3-973d-85cce04f88a7})",null,null
"(:Course {course_id: INFO6251, major: INFO, updated_at: 2025-07-05T21:25:57.939000000Z, credits: 3, name: Lab for INFO 6250, description: Accompanies INFO 6250. Offers additional instruction in Web tools discussed in class., domains: [Software Development, nan], skills_associated: [web development], id: c1dcbf58-2a46-4014-b68d-cf8d237e1210})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6250, major: INFO, updated_at: 2025-07-05T21:25:58.993000000Z, credits: 3, name: Web Development Tools and Methods, description: Explores advanced server-side technologies and tools necessary to design and engineer complete web-based enterprise applications quickly. Designed to build on previous experience to cover the life cycle of a web-based application. Focuses on MVC web development frameworks to build server-side, data-intensive, and multitier web applications. Additionally, discusses designing rich internet applications (RIA) using AJAX and service-oriented architecture (SOA) using REST., domains: [Software Development, Web Development], skills_associated: [ai, api, backend, mvc, software design, user experience, web development], id: bf1d0a27-27fc-49a4-82a3-493fc7982b4e})"
"(:Course {course_id: INFO5002, major: INFO, updated_at: 2025-07-05T21:25:58.042000000Z, credits: 3, name: Introduction to Python for Information Systems, description: Studies the Python programming language for application engineering. This hands-on course offers students an opportunity to obtain proficiency in the core concepts of Python and the skills and knowledge for building applications using any of the hundreds of thousands of task-specific Python libraries. Covers the important concepts such as reading and writing to standard IO, using operators, controlling the flow of execution, using functions, reading and writing files, and basic object-oriented programming concepts. Applies tools and techniques to classical software engineering and Python-specific facilities such as code introspection, reuse, built-in sequence types, and iteration., domains: [Software Development, nan], skills_associated: [ai, operating systems, python, software engineering, user experience], id: 1b6d7f10-df35-4ded-b746-477c24b6abc9})",null,null
"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5101, major: INFO, updated_at: 2025-07-05T21:25:58.209000000Z, credits: 3, name: Lab for INFO 5100, description: Accompanies INFO 5100. Provides additional instruction in Java programming., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: fbe4c6f1-eb69-44cc-9ec3-ff8eb3c52285})"
"(:Course {course_id: INFO5101, major: INFO, updated_at: 2025-07-05T21:25:58.209000000Z, credits: 3, name: Lab for INFO 5100, description: Accompanies INFO 5100. Provides additional instruction in Java programming., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: fbe4c6f1-eb69-44cc-9ec3-ff8eb3c52285})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO6105, major: INFO, updated_at: 2025-07-05T21:25:58.334000000Z, credits: 3, name: Data Science Engineering Methods and Tools, description: Introduces the fundamental techniques for machine learning and data science engineering. Discusses a variety of machine learning algorithms, along with examples of their implementation, evaluation, and best practices. Lays the foundation of how learning models are derived from complex data pipelines, both algorithmically and practically. Topics include supervised learning (parametric/nonparametric algorithms, support vector machines, kernels, neural networks, deep learning) and unsupervised learning (clustering, dimensionality reduction, recommender systems). Based on numerous real-world case studies., domains: [Data, AI/ML], skills_associated: [data analysis, data structures, machine learning, networking], id: 0db048a9-3dcf-425e-adde-379b62f6c64d})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO6105, major: INFO, updated_at: 2025-07-05T21:25:58.334000000Z, credits: 3, name: Data Science Engineering Methods and Tools, description: Introduces the fundamental techniques for machine learning and data science engineering. Discusses a variety of machine learning algorithms, along with examples of their implementation, evaluation, and best practices. Lays the foundation of how learning models are derived from complex data pipelines, both algorithmically and practically. Topics include supervised learning (parametric/nonparametric algorithms, support vector machines, kernels, neural networks, deep learning) and unsupervised learning (clustering, dimensionality reduction, recommender systems). Based on numerous real-world case studies., domains: [Data, AI/ML], skills_associated: [data analysis, data structures, machine learning, networking], id: 0db048a9-3dcf-425e-adde-379b62f6c64d})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO6106, major: INFO, updated_at: 2025-07-05T21:25:58.424000000Z, credits: 3, name: Neural Modeling Methods and Tools, description: Uses a graph theoretic approach to build models representing dependencies of model components instead of using analytical functions in statistics to interpolate observations, build data models, and estimate model parameters. The interpolation is still parametric, but the parameters are graph related and do not involve analytic functions. Discusses how to explain neural models and not fear them; when it is appropriate to use neural models; and how to interact with machines that use neural models in the same way one would trust a friend, so that trust between humans and machines is enhanced rather than diminished. These so-called neural models mirror in some regard how biological brains build models to make sense of the world and do predictions., domains: [AI/ML, Data], skills_associated: [ai, statistics, user experience], id: c55b1019-5264-4bc6-af15-601f75f1ff09})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6105, major: INFO, updated_at: 2025-07-05T21:25:58.334000000Z, credits: 3, name: Data Science Engineering Methods and Tools, description: Introduces the fundamental techniques for machine learning and data science engineering. Discusses a variety of machine learning algorithms, along with examples of their implementation, evaluation, and best practices. Lays the foundation of how learning models are derived from complex data pipelines, both algorithmically and practically. Topics include supervised learning (parametric/nonparametric algorithms, support vector machines, kernels, neural networks, deep learning) and unsupervised learning (clustering, dimensionality reduction, recommender systems). Based on numerous real-world case studies., domains: [Data, AI/ML], skills_associated: [data analysis, data structures, machine learning, networking], id: 0db048a9-3dcf-425e-adde-379b62f6c64d})"
"(:Course {course_id: INFO7990, major: INFO, updated_at: 2025-07-05T21:25:58.527000000Z, credits: 3, name: Thesis, description: Offers theoretical and experimental work conducted under the supervision of a departmental faculty., domains: [Research, nan], skills_associated: [research], id: 2157c461-10e3-4546-b149-12e185f5e742})",null,null
"(:Course {course_id: INFO6150, major: INFO, updated_at: 2025-07-05T21:25:58.647000000Z, credits: 3, name: Web Design and User Experience Engineering, description: Exposes students to both conceptual and technical aspects of Web design. User experience design is the discipline of creating a useful and usable website or application that is easily navigated and meets the needs of both the site owner and its users. Covers Web standards and best practices. Studies the fundamental concepts, techniques, practices, work flows, and tools associated with the practice of user-experience design in Web interfaces. Offers students an opportunity to learn the core principles of information architecture, usability, marketing hierarchy, and user experience for contextual, value-driven websites. Additional areas of focus include typography, color theory and composition, responsive design, CSS3 concepts, basic scripting, and JavaScript libraries to create functional, effective, and visually appealing websites., domains: [Software Development, Web Design], skills_associated: [java, operating systems, software design, web development], id: b5979439-1356-4262-8792-59d43bbd2eba})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO6150, major: INFO, updated_at: 2025-07-05T21:25:58.647000000Z, credits: 3, name: Web Design and User Experience Engineering, description: Exposes students to both conceptual and technical aspects of Web design. User experience design is the discipline of creating a useful and usable website or application that is easily navigated and meets the needs of both the site owner and its users. Covers Web standards and best practices. Studies the fundamental concepts, techniques, practices, work flows, and tools associated with the practice of user-experience design in Web interfaces. Offers students an opportunity to learn the core principles of information architecture, usability, marketing hierarchy, and user experience for contextual, value-driven websites. Additional areas of focus include typography, color theory and composition, responsive design, CSS3 concepts, basic scripting, and JavaScript libraries to create functional, effective, and visually appealing websites., domains: [Software Development, Web Design], skills_associated: [java, operating systems, software design, web development], id: b5979439-1356-4262-8792-59d43bbd2eba})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO6215, major: INFO, updated_at: 2025-07-05T21:25:58.827000000Z, credits: 3, name: Business Analysis and Information Engineering, description: Covers computer information systems and the decision-making process, determination of information requirements, system development life cycle, and system modeling and analysis. Uses a hands-on approach to introduce the student to software engineering methodologies and practices, business requirements specification, business process design, model-driven object-oriented design, software development, and maintenance. Emphasizes the effective leverage of the Unified Modeling Language (UML) to transform business issues and objectives to concrete software solutions that meet business needs and usability and user interface design as critical elements of a successful software engineering engagement., domains: [Business Analysis, Software Development], skills_associated: [ai, machine learning, operating systems, software engineering, user experience], id: 5f9a04fd-97a9-47c8-9f31-c91e10b06f0f})",null,null
"(:Course {course_id: INFO6245, major: INFO, updated_at: 2025-07-05T21:25:58.899000000Z, credits: 3, name: Planning and Managing Information Systems Development, description: Provides an overview of the most popular information systems needs assessment methodologies including portfolio analysis, stage assessment, business systems planning, and the Alloway survey technique. Topics include utilities IS strategic plan prioritization techniques of business goal alignment, architectural compatibility, and cost/benefit and risk analysis to demonstrate how businesses match needs to budgetary constraints. Describes and evaluates options for the placement of the IS function within the organization and a variety of methods to manage the function. Introduces a generic application development and project planning methodology used as a model to facilitate the development of a four-stage project plan for a prototype project. Uses the Project Management Institutes PMBOK and Harvard Business School case studies extensively., domains: [Software Development, Project Management], skills_associated: [ai, operating systems, project management], id: 192cc802-401c-401d-92e4-1681c6303b70})",null,null
"(:Course {course_id: INFO6250, major: INFO, updated_at: 2025-07-05T21:25:58.993000000Z, credits: 3, name: Web Development Tools and Methods, description: Explores advanced server-side technologies and tools necessary to design and engineer complete web-based enterprise applications quickly. Designed to build on previous experience to cover the life cycle of a web-based application. Focuses on MVC web development frameworks to build server-side, data-intensive, and multitier web applications. Additionally, discusses designing rich internet applications (RIA) using AJAX and service-oriented architecture (SOA) using REST., domains: [Software Development, Web Development], skills_associated: [ai, api, backend, mvc, software design, user experience, web development], id: bf1d0a27-27fc-49a4-82a3-493fc7982b4e})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6251, major: INFO, updated_at: 2025-07-05T21:25:57.939000000Z, credits: 3, name: Lab for INFO 6250, description: Accompanies INFO 6250. Offers additional instruction in Web tools discussed in class., domains: [Software Development, nan], skills_associated: [web development], id: c1dcbf58-2a46-4014-b68d-cf8d237e1210})"
"(:Course {course_id: INFO6250, major: INFO, updated_at: 2025-07-05T21:25:58.993000000Z, credits: 3, name: Web Development Tools and Methods, description: Explores advanced server-side technologies and tools necessary to design and engineer complete web-based enterprise applications quickly. Designed to build on previous experience to cover the life cycle of a web-based application. Focuses on MVC web development frameworks to build server-side, data-intensive, and multitier web applications. Additionally, discusses designing rich internet applications (RIA) using AJAX and service-oriented architecture (SOA) using REST., domains: [Software Development, Web Development], skills_associated: [ai, api, backend, mvc, software design, user experience, web development], id: bf1d0a27-27fc-49a4-82a3-493fc7982b4e})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO6255, major: INFO, updated_at: 2025-07-05T21:25:59.079000000Z, credits: 3, name: Software Quality Control and Management, description: Examines techniques for the management and evolution of software systems. Topics include managing software as an asset; life cycle development and rapid development technologies; maintainability; quality assurance of software systems including testing strategies and problem analysis; software risk analysis; analysis of software project failures; process models, such as CMM and ISO 9001; configuration management; and the impact of new development technologies on software management., domains: [Software Development, nan], skills_associated: [ai, api, operating systems, testing], id: abb25a18-f8ec-4f1c-8564-7e3272311885})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO6255, major: INFO, updated_at: 2025-07-05T21:25:59.079000000Z, credits: 3, name: Software Quality Control and Management, description: Examines techniques for the management and evolution of software systems. Topics include managing software as an asset; life cycle development and rapid development technologies; maintainability; quality assurance of software systems including testing strategies and problem analysis; software risk analysis; analysis of software project failures; process models, such as CMM and ISO 9001; configuration management; and the impact of new development technologies on software management., domains: [Software Development, nan], skills_associated: [ai, api, operating systems, testing], id: abb25a18-f8ec-4f1c-8564-7e3272311885})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO6350, major: INFO, updated_at: 2025-07-05T21:25:59.155000000Z, credits: 3, name: Smartphones-Based Web Development, description: Covers application development for mobile devices using advanced development platforms. Focuses on how to write mobile applications using cross-platform development tools and processes. Topics include user interfaces, the software life cycle, persistent storage, networking using HTTP and other REST interfaces, and mobile/handheld data applications. Requires a final project., domains: [Software Development, Web Development], skills_associated: [api, mobile development, networking, operating systems, user experience, web development], id: 3172135b-11fc-4e6c-881d-730107aac651})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO6350, major: INFO, updated_at: 2025-07-05T21:25:59.155000000Z, credits: 3, name: Smartphones-Based Web Development, description: Covers application development for mobile devices using advanced development platforms. Focuses on how to write mobile applications using cross-platform development tools and processes. Topics include user interfaces, the software life cycle, persistent storage, networking using HTTP and other REST interfaces, and mobile/handheld data applications. Requires a final project., domains: [Software Development, Web Development], skills_associated: [api, mobile development, networking, operating systems, user experience, web development], id: 3172135b-11fc-4e6c-881d-730107aac651})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO6660, major: INFO, updated_at: 2025-07-05T21:25:59.250000000Z, credits: 3, name: Business Ethics and Intellectual Property for Engineers, description: Seeks to support successful engineering careers by offering students an applied understanding of ethical principles in the workplace and fundamentals of intellectual property and the American legal system. Seeks to increase students awareness of the ethical implications of their work and to influence colleagues to think and act in a socially cognizant manner. Introduces ethical principles and codes of professional ethics; types of intellectual property (patents, trade secrets, trademarks, copyrights); and fundamentals of the American legal system (sources of American law, contracts, torts, intellectual property, antitrust). Offers students an opportunity to practice verbal communication and presentation skills; develop an applied understanding of the relationship and differences between legal liability and ethical behavior; and develop applied critical thinking, communication, and presentation skills., domains: [Business, Ethics], skills_associated: [business, ethics, intellectual property, legal system, critical thinking, communication, presentation, professional responsibility, social responsibility], id: b258e67a-cc75-4a28-99a3-bb23db52290d})",null,null
"(:Course {course_id: INFO7110, major: INFO, updated_at: 2025-07-05T21:25:59.339000000Z, credits: 3, name: High-Performance Coding for Fintech, description: Distills the programming challenges constantly faced by quantitative developers in the fintech space. Presents high-performance computing challenges as well as their solutions for investment banks, market-making firms, capital management funds, and loan-financing institutions. Covers the art of high-performance computing using object-oriented structure of five prevailing programming languages widely adopted in the fintech industry: Java, C++, MATLAB, R, and Python. In particular, the course offers students an opportunity to obtain capabilities to successfully complete high-performance computing tasks in the following five application areas: global-macro arbitrage, quantitative equity portfolio management, option pricing and trading, fixed-income securities, and market making., domains: [FinTech, Software Development], skills_associated: [ai, api, java, performance, python, user experience], id: 1be64e10-f34a-4e5f-8380-c3a1ae29b48e})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: INFO7205, major: INFO, updated_at: 2025-07-05T21:25:59.437000000Z, credits: 3, name: Advanced Application Engineering Project, description: Offers students an opportunity to master advanced software design and programming techniques for building complex software applications quickly. The engineering issues addressed assume the business problems are difficult to understand and manage in a practical manner€”the system capacity must support thousands or even millions of users in a multitude of roles. Addresses high-performance computing requirements, such as concurrency and control, scalability, replication, and failover., domains: [Software Development, nan], skills_associated: [ai, concurrency, performance, software design, user experience], id: f92b8ee0-3deb-455f-9861-650d3eaa36c5})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO7205, major: INFO, updated_at: 2025-07-05T21:25:59.437000000Z, credits: 3, name: Advanced Application Engineering Project, description: Offers students an opportunity to master advanced software design and programming techniques for building complex software applications quickly. The engineering issues addressed assume the business problems are difficult to understand and manage in a practical manner€”the system capacity must support thousands or even millions of users in a multitude of roles. Addresses high-performance computing requirements, such as concurrency and control, scalability, replication, and failover., domains: [Software Development, nan], skills_associated: [ai, concurrency, performance, software design, user experience], id: f92b8ee0-3deb-455f-9861-650d3eaa36c5})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO7225, major: INFO, updated_at: 2025-07-05T21:25:59.527000000Z, credits: 3, name: Accounting and Budgetary Systems for Engineers, description: Covers the latest engineering principles necessary for building complex software systems that comply with recognized standards in the financial industry. With automated business processes today, risk and responsibility are shifting to information technology (IT) systems. Offers students an opportunity to learn how to incorporate information-based controls related to the financial industry that signal trouble, detect violations, and provide accountability, as well as a working approval process. Emphasizes software design. Seeks to help engineers construct complex software from a sophisticated engineering perspective. Examines how to put together cutting-edge organizational systems that people in the financial world can put to good use. Designed to prepare students for jobs in the building, maintaining, and employment of such information systems., domains: [Finance, Software Development], skills_associated: [ai, operating systems, software design, user experience], id: f29b6cd1-faa7-4ef0-bf23-6241d37a8a52})",null,null
"(:Course {course_id: INFO7245, major: INFO, updated_at: 2025-07-05T21:25:59.618000000Z, credits: 3, name: Agile Software Development, description: Offers students an opportunity to achieve a high level of practical understanding of software development life cycle (SDLC) with emphasis on agile and adaptive incremental methodologies. Examines techniques for the management and evolution of software systems, including project planning from requirements gathering, analysis, estimation, and releasing using a hands-on approach to implement agile methodologies. Also covers maintainability, including software risk analysis, project retrospectives, and process models such as capability maturity model, configuration management, and their practical implementation., domains: [Software Development, Project Management], skills_associated: [agile, ai, operating systems, project management, user experience], id: 24352e64-eaa7-42d6-92e5-66de6da0c7ee})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO7245, major: INFO, updated_at: 2025-07-05T21:25:59.618000000Z, credits: 3, name: Agile Software Development, description: Offers students an opportunity to achieve a high level of practical understanding of software development life cycle (SDLC) with emphasis on agile and adaptive incremental methodologies. Examines techniques for the management and evolution of software systems, including project planning from requirements gathering, analysis, estimation, and releasing using a hands-on approach to implement agile methodologies. Also covers maintainability, including software risk analysis, project retrospectives, and process models such as capability maturity model, configuration management, and their practical implementation., domains: [Software Development, Project Management], skills_associated: [agile, ai, operating systems, project management, user experience], id: 24352e64-eaa7-42d6-92e5-66de6da0c7ee})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO7250, major: INFO, updated_at: 2025-07-05T21:25:59.704000000Z, credits: 3, name: Engineering of Big-Data Systems, description: Introduces a general framework for thinking about big data. Services such as Web analytics and intelligent e-commerce have promoted a rapid increase in the volume of data generated, analyzed, and archived. In order to solve the problems related to big data, a newer type of database product has emerged. Covers how to apply technologies like Hadoop, Accumulo, MongoDB, and various NoSQL databases to build simple, robust, and efficient systems to manage and analyze big data. Also describes an easy approach to big data systems that can be built and run by a small team of students. Guides students through the theory of big data systems, how to implement them in practice, and how to deploy and operate them once they are built., domains: [Software Development, Data], skills_associated: [api, big data, databases, object-oriented, operating systems, user experience, web development], id: c96d6e5c-c3e8-4e7a-b45b-27e847a78988})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: INFO7250, major: INFO, updated_at: 2025-07-05T21:25:59.704000000Z, credits: 3, name: Engineering of Big-Data Systems, description: Introduces a general framework for thinking about big data. Services such as Web analytics and intelligent e-commerce have promoted a rapid increase in the volume of data generated, analyzed, and archived. In order to solve the problems related to big data, a newer type of database product has emerged. Covers how to apply technologies like Hadoop, Accumulo, MongoDB, and various NoSQL databases to build simple, robust, and efficient systems to manage and analyze big data. Also describes an easy approach to big data systems that can be built and run by a small team of students. Guides students through the theory of big data systems, how to implement them in practice, and how to deploy and operate them once they are built., domains: [Software Development, Data], skills_associated: [api, big data, databases, object-oriented, operating systems, user experience, web development], id: c96d6e5c-c3e8-4e7a-b45b-27e847a78988})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6250, major: INFO, updated_at: 2025-07-05T21:25:58.993000000Z, credits: 3, name: Web Development Tools and Methods, description: Explores advanced server-side technologies and tools necessary to design and engineer complete web-based enterprise applications quickly. Designed to build on previous experience to cover the life cycle of a web-based application. Focuses on MVC web development frameworks to build server-side, data-intensive, and multitier web applications. Additionally, discusses designing rich internet applications (RIA) using AJAX and service-oriented architecture (SOA) using REST., domains: [Software Development, Web Development], skills_associated: [ai, api, backend, mvc, software design, user experience, web development], id: bf1d0a27-27fc-49a4-82a3-493fc7982b4e})"
"(:Course {course_id: INFO7250, major: INFO, updated_at: 2025-07-05T21:25:59.704000000Z, credits: 3, name: Engineering of Big-Data Systems, description: Introduces a general framework for thinking about big data. Services such as Web analytics and intelligent e-commerce have promoted a rapid increase in the volume of data generated, analyzed, and archived. In order to solve the problems related to big data, a newer type of database product has emerged. Covers how to apply technologies like Hadoop, Accumulo, MongoDB, and various NoSQL databases to build simple, robust, and efficient systems to manage and analyze big data. Also describes an easy approach to big data systems that can be built and run by a small team of students. Guides students through the theory of big data systems, how to implement them in practice, and how to deploy and operate them once they are built., domains: [Software Development, Data], skills_associated: [api, big data, databases, object-oriented, operating systems, user experience, web development], id: c96d6e5c-c3e8-4e7a-b45b-27e847a78988})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO7390, major: INFO, updated_at: 2025-07-05T21:26:00.687000000Z, credits: 3, name: Advances in Data Sciences and Architecture, description: Covers a wide range of skills and responsibilities that are necessary for managing complex business performance and operational data. Such data tend to be fragmented, poorly organized, and often flawed. Offers students an opportunity to learn how a more up-to-date mapping of complex data works and to be alerted to the care and attention they must give to such a task as well as the implications of the results. Covers best practices for managing all aspects of the data transformation life cycle, covering broad areas such as requirements gathering, meta-model design, data integration and transformation, as well as implementation and ongoing operations. Discusses tools for mapping fragmented data into business intelligence solutions that guide successful strategies., domains: [Data, AI/ML], skills_associated: [data analysis, performance, software design, user experience], id: 6f23ab06-45c0-45cd-a200-10877a4ef1a1})"
"(:Course {course_id: INFO7255, major: INFO, updated_at: 2025-07-05T21:25:59.788000000Z, credits: 3, name: Advanced Big-Data Applications and Indexing Techniques, description: Studies advanced indexing techniques and algorithms for big-data platforms such as Hadoop and NoSQL databases. Covers big-data design and indexing patterns to organize, aggregate, manipulate, and analyze huge amounts of data beyond human scale. Offers students an opportunity to learn advanced techniques to improve the performance and robustness of the advanced big-data programming models. Additional areas of focus include scalable graph databases, advanced indexing, and full-text searching in graph databases., domains: [Software Development, Data], skills_associated: [big data, data structures, databases, object-oriented, operating systems, performance], id: 23780fb0-be72-489c-b1de-83964ae0e0c6})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: INFO7255, major: INFO, updated_at: 2025-07-05T21:25:59.788000000Z, credits: 3, name: Advanced Big-Data Applications and Indexing Techniques, description: Studies advanced indexing techniques and algorithms for big-data platforms such as Hadoop and NoSQL databases. Covers big-data design and indexing patterns to organize, aggregate, manipulate, and analyze huge amounts of data beyond human scale. Offers students an opportunity to learn advanced techniques to improve the performance and robustness of the advanced big-data programming models. Additional areas of focus include scalable graph databases, advanced indexing, and full-text searching in graph databases., domains: [Software Development, Data], skills_associated: [big data, data structures, databases, object-oriented, operating systems, performance], id: 23780fb0-be72-489c-b1de-83964ae0e0c6})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6250, major: INFO, updated_at: 2025-07-05T21:25:58.993000000Z, credits: 3, name: Web Development Tools and Methods, description: Explores advanced server-side technologies and tools necessary to design and engineer complete web-based enterprise applications quickly. Designed to build on previous experience to cover the life cycle of a web-based application. Focuses on MVC web development frameworks to build server-side, data-intensive, and multitier web applications. Additionally, discusses designing rich internet applications (RIA) using AJAX and service-oriented architecture (SOA) using REST., domains: [Software Development, Web Development], skills_associated: [ai, api, backend, mvc, software design, user experience, web development], id: bf1d0a27-27fc-49a4-82a3-493fc7982b4e})"
"(:Course {course_id: INFO7255, major: INFO, updated_at: 2025-07-05T21:25:59.788000000Z, credits: 3, name: Advanced Big-Data Applications and Indexing Techniques, description: Studies advanced indexing techniques and algorithms for big-data platforms such as Hadoop and NoSQL databases. Covers big-data design and indexing patterns to organize, aggregate, manipulate, and analyze huge amounts of data beyond human scale. Offers students an opportunity to learn advanced techniques to improve the performance and robustness of the advanced big-data programming models. Additional areas of focus include scalable graph databases, advanced indexing, and full-text searching in graph databases., domains: [Software Development, Data], skills_associated: [big data, data structures, databases, object-oriented, operating systems, performance], id: 23780fb0-be72-489c-b1de-83964ae0e0c6})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6220, major: CSYE, updated_at: 2025-07-05T21:25:55.815000000Z, credits: 3, name: Enterprise Software Design, description: Designed to build on previous experience in concepts of object-oriented design courses with equal focus in the three areas of architecture, design, and implementation. Instruction and hands-on exercises cover both server-side and client-side web programming. Offers students an opportunity to build a conceptual understanding and to gain practical experience with popular frameworks (Spring MVC, Hibernate, and Dojo or jQuery) that increase productivity, empower developers, and greatly simplify web development. The goal is to be able to build the server side and client side of substantial web-based, client-server, database-intensive, multitier applications., domains: [Software Development, nan], skills_associated: [ai, backend, databases, hibernate, mvc, software design, spring, user experience, web development], id: 2d8a6f61-25d7-4de2-af18-8ba91be2b508})"
"(:Course {course_id: INFO7260, major: INFO, updated_at: 2025-07-05T21:25:59.887000000Z, credits: 3, name: Business Process Engineering, description: Addresses the question of how to understand and specify the flow of work responsibility and movement of information throughout the enterprise. For businesses to maximize the benefits of technology, they must transform their ad-hoc and often poorly defined ways of doing things to formal business processes. Analyzes the specification and implementation of complex information systems that integrate well into core business operations. Offers students an opportunity to learn how to use agile process specification techniques, dynamic process execution, and real-time measurement and reporting to support continuous business improvement and change., domains: [Business, Software Development], skills_associated: [agile, operating systems], id: 86dae30f-4e9a-44c8-aa84-b5c91497defa})",null,null
"(:Course {course_id: INFO7285, major: INFO, updated_at: 2025-07-05T21:25:59.968000000Z, credits: 3, name: Organizational Change and IT, description: Focuses on the change effort needed to integrate a project into the firms organizational structure, culture, business, and process metrics. Geared for students undertaking enterprise resource planning systems, or those involved in small or large organizational reengineering projects designed to make IT a primary focus of the firms business strategy. Topics include management theories and organizational design principles; strategy and critical success factor formulation; methods to reach information systems maturity; business process modeling techniques; quality, the mindset, and the problem-solving tools; human resource, cultural, and technical change enablers; how to plan a business reengineering project; and implementation of major organizational change., domains: [Business, Software Development], skills_associated: [operating systems, project management], id: ae2eb964-c5f8-45d2-bab0-9f3ca4ee3ca9})",null,null
"(:Course {course_id: INFO7300, major: INFO, updated_at: 2025-07-05T21:26:00.090000000Z, credits: 3, name: Engineering Cybersecure Software Systems, description: Addresses design and implementation issues critical to producing cybersecure software systems by using a software development perspective. Deals with the question of how to make the requirements for confidentiality, integrity, and availability integral to the software development process from requirements gathering to design, development, configuration, deployment, and ongoing maintenance. Covers emerging software life-cycle practices that address both cybersecurity problems caused by bad software practices that leave software vulnerable to cyberattack and other software vulnerabilities that are caused by deficiencies in modeling of security requirements, architecture, and design issues., domains: [Software Development, nan], skills_associated: [ai, operating systems, security, software design, user experience], id: 61c23eb8-6a10-4ed9-b959-d9b66385bbbc})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO7300, major: INFO, updated_at: 2025-07-05T21:26:00.090000000Z, credits: 3, name: Engineering Cybersecure Software Systems, description: Addresses design and implementation issues critical to producing cybersecure software systems by using a software development perspective. Deals with the question of how to make the requirements for confidentiality, integrity, and availability integral to the software development process from requirements gathering to design, development, configuration, deployment, and ongoing maintenance. Covers emerging software life-cycle practices that address both cybersecurity problems caused by bad software practices that leave software vulnerable to cyberattack and other software vulnerabilities that are caused by deficiencies in modeling of security requirements, architecture, and design issues., domains: [Software Development, nan], skills_associated: [ai, operating systems, security, software design, user experience], id: 61c23eb8-6a10-4ed9-b959-d9b66385bbbc})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO7330, major: INFO, updated_at: 2025-07-05T21:26:00.166000000Z, credits: 3, name: Information Systems for Healthcare-Services Delivery, description: Addresses the important information systems questions facing the delivery and assessment of healthcare services from administrative, financial, and clinical perspectives. These include the use of electronic medical records; health information exchanges; and performance evaluation of providers, patients, and payers. Provides an introduction on how healthcare is delivered. Also focuses on various information management tools being implemented as well as those needed to move care delivery and quality forward., domains: [Software Development, nan], skills_associated: [operating systems, performance], id: 0e408890-82ea-435d-92d9-e70ea9b920d8})",null,null
"(:Course {course_id: INFO7374, major: INFO, updated_at: 2025-07-05T21:26:00.264000000Z, credits: 3, name: Special Topics in Information Systems, description: Covers state-of-the-art material of current interest. May be repeated without limit, domains: [Software Development, nan], skills_associated: [api], id: 0572e714-5e00-4d2c-a735-42738049cb0f})",null,null
"(:Course {course_id: INFO7375, major: INFO, updated_at: 2025-07-05T21:26:00.381000000Z, credits: 3, name: Special Topics in Artificial Intelligence Engineering and Applications, description: Covers recent advances in neural nets and deep learning techniques with applications to large-scale engineering problems., domains: [AI/ML, nan], skills_associated: [ai], id: d0bd6a06-16d3-4c0e-ad6d-c3a551bb626b})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: DAMG6105, major: DAMG, updated_at: 2025-07-05T21:26:00.503000000Z, credits: 3, name: Data Science Engineering with Python, description: Studies the Python programming language with data science as the application domain. Offers students an opportunity to learn how to perform complex numerical calculations, fixed data types, space efficiency, and vector manipulations. Covers tools and techniques for manipulating tables, spreadsheets, and group and pivot tables involving extremely large data sets. Covers large multidimensional arrays and matrices and the high-level mathematical functions to operate on these arrays. Studies how to use Python to manipulate the classic math and science algorithms. Analyzes helper functions such as linear and nonlinear regression, integration, Fourier transformations, numerical optimization, etc. Includes higher-level classes for manipulating and visualizing data. Applies tools and techniques to classical data science using cases such as time series forecasting, social network analysis, text analytics, and big data processing., domains: [Data, AI/ML], skills_associated: [ai, big data, data analysis, data structures, machine learning, networking, operating systems, performance, python], id: d03a9e23-ffc0-4da9-a0f0-af56fbd6599c})",null,null
"(:Course {course_id: INFO7385, major: INFO, updated_at: 2025-07-05T21:26:00.606000000Z, credits: 3, name: Managerial Communications for Engineers, description: Focuses on communication strategies and tactics for engineers at the interpersonal, team, and organizational level. Course topics include forms (oral and written), styles, and differences in communication; coaching and giving feedback to staff; and building teams, managing conflict, and special topics in organizational communication. The primary goal is to strengthen the students social and emotional intelligence skills to help them progress along their engineering career path. Combines academic content with practical skill-building activities., domains: [Business, nan], skills_associated: [user experience], id: d546877e-06e5-4646-a6bd-7f2d8259a1e2})",null,null
"(:Course {course_id: INFO7390, major: INFO, updated_at: 2025-07-05T21:26:00.687000000Z, credits: 3, name: Advances in Data Sciences and Architecture, description: Covers a wide range of skills and responsibilities that are necessary for managing complex business performance and operational data. Such data tend to be fragmented, poorly organized, and often flawed. Offers students an opportunity to learn how a more up-to-date mapping of complex data works and to be alerted to the care and attention they must give to such a task as well as the implications of the results. Covers best practices for managing all aspects of the data transformation life cycle, covering broad areas such as requirements gathering, meta-model design, data integration and transformation, as well as implementation and ongoing operations. Discusses tools for mapping fragmented data into business intelligence solutions that guide successful strategies., domains: [Data, AI/ML], skills_associated: [data analysis, performance, software design, user experience], id: 6f23ab06-45c0-45cd-a200-10877a4ef1a1})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6105, major: INFO, updated_at: 2025-07-05T21:25:58.334000000Z, credits: 3, name: Data Science Engineering Methods and Tools, description: Introduces the fundamental techniques for machine learning and data science engineering. Discusses a variety of machine learning algorithms, along with examples of their implementation, evaluation, and best practices. Lays the foundation of how learning models are derived from complex data pipelines, both algorithmically and practically. Topics include supervised learning (parametric/nonparametric algorithms, support vector machines, kernels, neural networks, deep learning) and unsupervised learning (clustering, dimensionality reduction, recommender systems). Based on numerous real-world case studies., domains: [Data, AI/ML], skills_associated: [data analysis, data structures, machine learning, networking], id: 0db048a9-3dcf-425e-adde-379b62f6c64d})"
"(:Course {course_id: INFO7405, major: INFO, updated_at: 2025-07-05T21:26:00.763000000Z, credits: 3, name: Advances in Engineering Medical Information Systems, description: Focuses on the fundamentals of engineering patient medical records as timelines of medical encounters that capture critical clinical decisions made in various contexts such as assessments, diagnoses, treatments, etc. Emphasizes semantically rich clinical information models to support predictive analysis in order to recognize patterns of disease early. Record systems typically focus on data recording for legal purposes, ignoring the critical needs of patients and caregivers. Introduces innovative software design and architecture techniques that recognize the complex interaction between patients and caregivers, provide immediately available detailed information for both, and thus invigorate clinical workplaces. Covers techniques for engineering medical applications as sociotechnical systems that promote the safety, effectiveness, and efficiency of core clinical operations., domains: [Advanced, Software Development], skills_associated: [ai, operating systems, software design], id: cbe0244e-329e-4220-b025-04b0044c85c2})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO7420, major: INFO, updated_at: 2025-07-05T21:26:00.836000000Z, credits: 3, name: Drug Development Processes and Information Systems Compliance, description: Begins with the recognition that information technology (IT) has transformed the way that new drugs are developed today. From preclinical studies to small Phase-I clinical trials all the way up to large global Phase-III pivotal trials, virtually every aspect of drug development is evolving due to technological advances. Each of these advances carries with it technological, procedural, and regulatory challenges and uncertainties. This course explores many of todays most pressing and challenging IT questions facing the pharmaceutical/biotechnology industry and the FDA regarding the use of electronic records, databases, and information management systems that have become an integral part of development programs and regulatory submissions., domains: [Information Systems, Drug Development], skills_associated: [ai, databases, operating systems], id: d17177b5-26f4-4edb-a70d-92a6e9d72c37})",null,null
"(:Course {course_id: INFO7500, major: INFO, updated_at: 2025-07-05T21:26:00.912000000Z, credits: 3, name: Cryptocurrency and Smart Contract Engineering, description: Seeks to provide a detailed understanding of the function and deployment of smart contracts using the Solidity language. Digs deep into the technical design and operation of blockchain platforms and specifically the implementation of smart contracts for operationalizing business processes. Offers students an opportunity to practice the development of decentralized autonomous organization applications using blockchain scripting languages., domains: [Cryptocurrency, Software Development], skills_associated: [ai, blockchain, operating systems], id: d5fe6fd4-0564-4f89-9c41-1937f45bacc6})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: INFO7500, major: INFO, updated_at: 2025-07-05T21:26:00.912000000Z, credits: 3, name: Cryptocurrency and Smart Contract Engineering, description: Seeks to provide a detailed understanding of the function and deployment of smart contracts using the Solidity language. Digs deep into the technical design and operation of blockchain platforms and specifically the implementation of smart contracts for operationalizing business processes. Offers students an opportunity to practice the development of decentralized autonomous organization applications using blockchain scripting languages., domains: [Cryptocurrency, Software Development], skills_associated: [ai, blockchain, operating systems], id: d5fe6fd4-0564-4f89-9c41-1937f45bacc6})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: INFO7510, major: INFO, updated_at: 2025-07-05T21:26:01.011000000Z, credits: 3, name: Smart Contract Application Engineering and Development, description: Emphasizes the essential coding skills for implementing self-enforcing, multiparty, mutually beneficial, contractual rights and obligations on top of blockchain technologies. Offers students an opportunity to learn how to leverage the principles and mechanisms of €œdecentralized autonomous organization€ to programmatically coordinate the interaction between participating parties at a global scale without the need for trusting a third party and how to build blockchain-type applications that automate the interaction of a network of participating entities such as buyers, sellers, suppliers, insurance, and finance., domains: [Cryptocurrency, Software Development], skills_associated: [ai, blockchain, networking, user experience], id: 98eb0399-f5b5-4bd0-82bd-992073377d47})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO7500, major: INFO, updated_at: 2025-07-05T21:26:00.912000000Z, credits: 3, name: Cryptocurrency and Smart Contract Engineering, description: Seeks to provide a detailed understanding of the function and deployment of smart contracts using the Solidity language. Digs deep into the technical design and operation of blockchain platforms and specifically the implementation of smart contracts for operationalizing business processes. Offers students an opportunity to practice the development of decentralized autonomous organization applications using blockchain scripting languages., domains: [Cryptocurrency, Software Development], skills_associated: [ai, blockchain, operating systems], id: d5fe6fd4-0564-4f89-9c41-1937f45bacc6})"
"(:Course {course_id: INFO7520, major: INFO, updated_at: 2025-07-05T21:26:01.107000000Z, credits: 3, name: Engineering of Advanced Cryptocurrency Systems, description: Addresses programming and information systems aspects of bitcoin and other cryptocurrencies. Topics covered include fundamentals of bitcoin mining, the theory of distributed consensus, principles of strong anonymity and untraceability, smart contract security, and peer-to-peer networking. Offers students an opportunity to learn about current developments in, and challenges facing, the use of cryptocurrencies in terms of the computing platform and systems integration. Students also have an opportunity to gain practical experience through challenging programming projects., domains: [Cryptocurrency, Software Development], skills_associated: [ai, networking, security], id: ffca9564-1a76-4f45-8409-7bda1b694971})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO7500, major: INFO, updated_at: 2025-07-05T21:26:00.912000000Z, credits: 3, name: Cryptocurrency and Smart Contract Engineering, description: Seeks to provide a detailed understanding of the function and deployment of smart contracts using the Solidity language. Digs deep into the technical design and operation of blockchain platforms and specifically the implementation of smart contracts for operationalizing business processes. Offers students an opportunity to practice the development of decentralized autonomous organization applications using blockchain scripting languages., domains: [Cryptocurrency, Software Development], skills_associated: [ai, blockchain, operating systems], id: d5fe6fd4-0564-4f89-9c41-1937f45bacc6})"
"(:Course {course_id: INFO7525, major: INFO, updated_at: 2025-07-05T21:26:01.205000000Z, credits: 3, name: Regulatory Aspects of Smart Contract Automation, description: Addresses the legal implication of using the blockchain to transfer and exchange money, perform trade transactions, maintain ownership of property, and enforce contractual obligations in secure and cost-effective ways. These applications present significant legal challenges in finance, property rights, and general commercial contracts in all industries. Offers students an opportunity to acquire the tools to engineer systems that adhere to existing and evolving regulatory frameworks. Highlights challenges around the issues of taxation, financial crimes, and money laundering, since blockchain technologies were designed to facilitate cross-border transactions., domains: [Business, Advanced], skills_associated: [ai, blockchain, devops, operating systems, user experience], id: 722a83b1-bd3a-4ae7-a79e-0c245011bd82})",null,null
"(:Course {course_id: INFO7535, major: INFO, updated_at: 2025-07-05T21:26:01.303000000Z, credits: 3, name: Digital Smart Contracts Product Innovations, description: Addresses the issue of how blockchain technology creates new ways of doing business. Blockchain technology uses bitcoin cryptocurrency to create value in a virtual setting. By linking the blockchain with real currency and the financial system, data, as well as business processes, a new breed of products and services can be realized. Explores innovative and disruptive applications of the blockchain., domains: [Cryptocurrency, Software Development], skills_associated: [ai, blockchain, operating systems, version control], id: d141f3de-26b2-41b2-9d05-e7359d368355})",null,null
"(:Course {course_id: INFO7610, major: INFO, updated_at: 2025-07-05T21:26:01.384000000Z, credits: 3, name: Special Topics in Natural Language Engineering Methods and Tools, description: Covers the latest techniques in natural language processing with applications to unstructured data., domains: [NLP, AI/ML], skills_associated: [operating systems], id: fb284b54-5bd0-4c9c-addb-2983205d2aad})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: INFO7986, major: INFO, updated_at: 2025-07-05T21:26:01.480000000Z, credits: 3, name: Research, description: Offers students an opportunity to conduct full-time research under faculty supervision., domains: [Research, nan], skills_associated: [research], id: 17721cb1-6748-4c2d-aee8-9a1b3212c31b})",null,null
"(:Course {course_id: DAMG6210, major: DAMG, updated_at: 2025-07-05T21:26:01.593000000Z, credits: 3, name: Data Management and Database Design, description: Studies design of information systems from a data perspective for engineering and business applications; data modeling, including entity-relationship (E-R) and object approaches; user-centric information requirements and data sharing; fundamental concepts of database management systems (DBMS) and their applications; alternative data models, with emphasis on relational design; SQL; data normalization; data-driven application design for personal computer, server-based, enterprise-wide, and Internet databases; and distributed data applications., domains: [Data, Information System], skills_associated: [backend, databases, user experience], id: 1ec367c4-7cee-4eef-a66e-7eb0dd73cabe})",null,null
"(:Course {course_id: DAMG7105, major: DAMG, updated_at: 2025-07-05T21:26:01.682000000Z, credits: 3, name: Intelligent Data Modeling and Presentation for Engineers, description: Studies every step in a data analysis pipeline and the visual techniques that aid in understanding the quality of each step. Offers students an opportunity to visualize the quality of their data, learn how to fix issues, and then visualize what those fixes helped. Focuses on visualizing models to produce actionable insights and how to visualize causal relationships in models. Emphasizes attention to graphical machine-learning models and how to visualize the critical parts of a network. Covers graphic design principles to assist students to effectively communicate their findings., domains: [Data, Visualization], skills_associated: [ai, data analysis, networking, operating systems], id: 2d995b0e-39e7-4a07-9423-6ac65f22e662})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5002, major: INFO, updated_at: 2025-07-05T21:25:58.042000000Z, credits: 3, name: Introduction to Python for Information Systems, description: Studies the Python programming language for application engineering. This hands-on course offers students an opportunity to obtain proficiency in the core concepts of Python and the skills and knowledge for building applications using any of the hundreds of thousands of task-specific Python libraries. Covers the important concepts such as reading and writing to standard IO, using operators, controlling the flow of execution, using functions, reading and writing files, and basic object-oriented programming concepts. Applies tools and techniques to classical software engineering and Python-specific facilities such as code introspection, reuse, built-in sequence types, and iteration., domains: [Software Development, nan], skills_associated: [ai, operating systems, python, software engineering, user experience], id: 1b6d7f10-df35-4ded-b746-477c24b6abc9})"
"(:Course {course_id: DAMG7105, major: DAMG, updated_at: 2025-07-05T21:26:01.682000000Z, credits: 3, name: Intelligent Data Modeling and Presentation for Engineers, description: Studies every step in a data analysis pipeline and the visual techniques that aid in understanding the quality of each step. Offers students an opportunity to visualize the quality of their data, learn how to fix issues, and then visualize what those fixes helped. Focuses on visualizing models to produce actionable insights and how to visualize causal relationships in models. Emphasizes attention to graphical machine-learning models and how to visualize the critical parts of a network. Covers graphic design principles to assist students to effectively communicate their findings., domains: [Data, Visualization], skills_associated: [ai, data analysis, networking, operating systems], id: 2d995b0e-39e7-4a07-9423-6ac65f22e662})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6105, major: INFO, updated_at: 2025-07-05T21:25:58.334000000Z, credits: 3, name: Data Science Engineering Methods and Tools, description: Introduces the fundamental techniques for machine learning and data science engineering. Discusses a variety of machine learning algorithms, along with examples of their implementation, evaluation, and best practices. Lays the foundation of how learning models are derived from complex data pipelines, both algorithmically and practically. Topics include supervised learning (parametric/nonparametric algorithms, support vector machines, kernels, neural networks, deep learning) and unsupervised learning (clustering, dimensionality reduction, recommender systems). Based on numerous real-world case studies., domains: [Data, AI/ML], skills_associated: [data analysis, data structures, machine learning, networking], id: 0db048a9-3dcf-425e-adde-379b62f6c64d})"
"(:Course {course_id: DAMG7105, major: DAMG, updated_at: 2025-07-05T21:26:01.682000000Z, credits: 3, name: Intelligent Data Modeling and Presentation for Engineers, description: Studies every step in a data analysis pipeline and the visual techniques that aid in understanding the quality of each step. Offers students an opportunity to visualize the quality of their data, learn how to fix issues, and then visualize what those fixes helped. Focuses on visualizing models to produce actionable insights and how to visualize causal relationships in models. Emphasizes attention to graphical machine-learning models and how to visualize the critical parts of a network. Covers graphic design principles to assist students to effectively communicate their findings., domains: [Data, Visualization], skills_associated: [ai, data analysis, networking, operating systems], id: 2d995b0e-39e7-4a07-9423-6ac65f22e662})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6105, major: DAMG, updated_at: 2025-07-05T21:26:00.503000000Z, credits: 3, name: Data Science Engineering with Python, description: Studies the Python programming language with data science as the application domain. Offers students an opportunity to learn how to perform complex numerical calculations, fixed data types, space efficiency, and vector manipulations. Covers tools and techniques for manipulating tables, spreadsheets, and group and pivot tables involving extremely large data sets. Covers large multidimensional arrays and matrices and the high-level mathematical functions to operate on these arrays. Studies how to use Python to manipulate the classic math and science algorithms. Analyzes helper functions such as linear and nonlinear regression, integration, Fourier transformations, numerical optimization, etc. Includes higher-level classes for manipulating and visualizing data. Applies tools and techniques to classical data science using cases such as time series forecasting, social network analysis, text analytics, and big data processing., domains: [Data, AI/ML], skills_associated: [ai, big data, data analysis, data structures, machine learning, networking, operating systems, performance, python], id: d03a9e23-ffc0-4da9-a0f0-af56fbd6599c})"
"(:Course {course_id: DAMG7245, major: DAMG, updated_at: 2025-07-05T21:26:01.763000000Z, credits: 3, name: Big-Data Systems and Intelligence Analytics, description: Offers students an opportunity to learn a hands-on approach to understanding how large-scale data sets are processed and how data science algorithms are adopted in the industry through case studies and labs. This project-based course builds on INFO 7390 and focuses on enabling students with tools and frameworks primarily to build end-to-end applications. The course is divided into three parts: building the data pipeline for data science, implementing data science algorithms, and scaling and deploying data science algorithms., domains: [Data, Intelligence Analytics], skills_associated: [data analysis, data structures, operating systems, user experience], id: ed209f87-6943-496a-9bde-32cb3d84e2a9})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6105, major: INFO, updated_at: 2025-07-05T21:25:58.334000000Z, credits: 3, name: Data Science Engineering Methods and Tools, description: Introduces the fundamental techniques for machine learning and data science engineering. Discusses a variety of machine learning algorithms, along with examples of their implementation, evaluation, and best practices. Lays the foundation of how learning models are derived from complex data pipelines, both algorithmically and practically. Topics include supervised learning (parametric/nonparametric algorithms, support vector machines, kernels, neural networks, deep learning) and unsupervised learning (clustering, dimensionality reduction, recommender systems). Based on numerous real-world case studies., domains: [Data, AI/ML], skills_associated: [data analysis, data structures, machine learning, networking], id: 0db048a9-3dcf-425e-adde-379b62f6c64d})"
"(:Course {course_id: DAMG7245, major: DAMG, updated_at: 2025-07-05T21:26:01.763000000Z, credits: 3, name: Big-Data Systems and Intelligence Analytics, description: Offers students an opportunity to learn a hands-on approach to understanding how large-scale data sets are processed and how data science algorithms are adopted in the industry through case studies and labs. This project-based course builds on INFO 7390 and focuses on enabling students with tools and frameworks primarily to build end-to-end applications. The course is divided into three parts: building the data pipeline for data science, implementing data science algorithms, and scaling and deploying data science algorithms., domains: [Data, Intelligence Analytics], skills_associated: [data analysis, data structures, operating systems, user experience], id: ed209f87-6943-496a-9bde-32cb3d84e2a9})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6105, major: DAMG, updated_at: 2025-07-05T21:26:00.503000000Z, credits: 3, name: Data Science Engineering with Python, description: Studies the Python programming language with data science as the application domain. Offers students an opportunity to learn how to perform complex numerical calculations, fixed data types, space efficiency, and vector manipulations. Covers tools and techniques for manipulating tables, spreadsheets, and group and pivot tables involving extremely large data sets. Covers large multidimensional arrays and matrices and the high-level mathematical functions to operate on these arrays. Studies how to use Python to manipulate the classic math and science algorithms. Analyzes helper functions such as linear and nonlinear regression, integration, Fourier transformations, numerical optimization, etc. Includes higher-level classes for manipulating and visualizing data. Applies tools and techniques to classical data science using cases such as time series forecasting, social network analysis, text analytics, and big data processing., domains: [Data, AI/ML], skills_associated: [ai, big data, data analysis, data structures, machine learning, networking, operating systems, performance, python], id: d03a9e23-ffc0-4da9-a0f0-af56fbd6599c})"
"(:Course {course_id: DAMG7250, major: DAMG, updated_at: 2025-07-05T21:26:01.845000000Z, credits: 3, name: Big Data Architecture and Governance, description: Focuses on creating and managing a data-driven enterprise. Geared to current IT technical professionals, data scientists, technical project managers, aspiring IT professionals, and managers who want to understand the complex nature of creating and managing data-driven projects to support the new and legacy data environments. Covers the analysis that is required to design data-driven projects and make appropriate recommendations for the target state of an organization. This analysis is used as input to create a comprehensive road map to achieve the target state and includes current and future uses of data, consumption methods, data sources and categories, and aggregation and quality requirements., domains: [Data, nan], skills_associated: [big data, software design, user experience], id: c1ee72f7-3bbe-4e18-8310-f82eea249415})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6105, major: DAMG, updated_at: 2025-07-05T21:26:00.503000000Z, credits: 3, name: Data Science Engineering with Python, description: Studies the Python programming language with data science as the application domain. Offers students an opportunity to learn how to perform complex numerical calculations, fixed data types, space efficiency, and vector manipulations. Covers tools and techniques for manipulating tables, spreadsheets, and group and pivot tables involving extremely large data sets. Covers large multidimensional arrays and matrices and the high-level mathematical functions to operate on these arrays. Studies how to use Python to manipulate the classic math and science algorithms. Analyzes helper functions such as linear and nonlinear regression, integration, Fourier transformations, numerical optimization, etc. Includes higher-level classes for manipulating and visualizing data. Applies tools and techniques to classical data science using cases such as time series forecasting, social network analysis, text analytics, and big data processing., domains: [Data, AI/ML], skills_associated: [ai, big data, data analysis, data structures, machine learning, networking, operating systems, performance, python], id: d03a9e23-ffc0-4da9-a0f0-af56fbd6599c})"
"(:Course {course_id: DAMG7250, major: DAMG, updated_at: 2025-07-05T21:26:01.845000000Z, credits: 3, name: Big Data Architecture and Governance, description: Focuses on creating and managing a data-driven enterprise. Geared to current IT technical professionals, data scientists, technical project managers, aspiring IT professionals, and managers who want to understand the complex nature of creating and managing data-driven projects to support the new and legacy data environments. Covers the analysis that is required to design data-driven projects and make appropriate recommendations for the target state of an organization. This analysis is used as input to create a comprehensive road map to achieve the target state and includes current and future uses of data, consumption methods, data sources and categories, and aggregation and quality requirements., domains: [Data, nan], skills_associated: [big data, software design, user experience], id: c1ee72f7-3bbe-4e18-8310-f82eea249415})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6210, major: DAMG, updated_at: 2025-07-05T21:26:01.593000000Z, credits: 3, name: Data Management and Database Design, description: Studies design of information systems from a data perspective for engineering and business applications; data modeling, including entity-relationship (E-R) and object approaches; user-centric information requirements and data sharing; fundamental concepts of database management systems (DBMS) and their applications; alternative data models, with emphasis on relational design; SQL; data normalization; data-driven application design for personal computer, server-based, enterprise-wide, and Internet databases; and distributed data applications., domains: [Data, Information System], skills_associated: [backend, databases, user experience], id: 1ec367c4-7cee-4eef-a66e-7eb0dd73cabe})"
"(:Course {course_id: DAMG7250, major: DAMG, updated_at: 2025-07-05T21:26:01.845000000Z, credits: 3, name: Big Data Architecture and Governance, description: Focuses on creating and managing a data-driven enterprise. Geared to current IT technical professionals, data scientists, technical project managers, aspiring IT professionals, and managers who want to understand the complex nature of creating and managing data-driven projects to support the new and legacy data environments. Covers the analysis that is required to design data-driven projects and make appropriate recommendations for the target state of an organization. This analysis is used as input to create a comprehensive road map to achieve the target state and includes current and future uses of data, consumption methods, data sources and categories, and aggregation and quality requirements., domains: [Data, nan], skills_associated: [big data, software design, user experience], id: c1ee72f7-3bbe-4e18-8310-f82eea249415})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: DAMG7275, major: DAMG, updated_at: 2025-07-05T21:26:01.939000000Z, credits: 3, name: Advanced Database Management Systems, description: Introduces the skill set required to become a serious database applications developer. Offers an overview of the Oracle9i object-relational database system for those who have mastered the fundamental principles of database design and are competent with basic SQL. Gives students the opportunity to develop a strong understanding of the PL/SQL programming language, which is used to create triggers, user-generated functions, stored procedures, and packages for programming Oracle objects. Emphasizes advanced SQL features and Oracle-specific SQL enhancements. Covers optimization and tuning issues. Covers corresponding material for Transact-SQL (used for Microsoft SQL Server and Sybase database systems) as time and resources permit., domains: [Data, Database Management System], skills_associated: [backend, databases, operating systems, performance, user experience], id: 4eac1333-974e-45e1-a6b5-439564775e3b})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6210, major: DAMG, updated_at: 2025-07-05T21:26:01.593000000Z, credits: 3, name: Data Management and Database Design, description: Studies design of information systems from a data perspective for engineering and business applications; data modeling, including entity-relationship (E-R) and object approaches; user-centric information requirements and data sharing; fundamental concepts of database management systems (DBMS) and their applications; alternative data models, with emphasis on relational design; SQL; data normalization; data-driven application design for personal computer, server-based, enterprise-wide, and Internet databases; and distributed data applications., domains: [Data, Information System], skills_associated: [backend, databases, user experience], id: 1ec367c4-7cee-4eef-a66e-7eb0dd73cabe})"
"(:Course {course_id: DAMG7290, major: DAMG, updated_at: 2025-07-05T21:26:02.020000000Z, credits: 3, name: Data Warehousing and Business Intelligence, description: Examines the technical and management aspects of building a data warehouse. Explores the architecture, infrastructure, processes, data quality, database design, and data analysis involved in building the data warehouse for business analysis. Management issues include business goals, tool selection, project management, personnel skills, training, and user requirements. Topics include dimensional data modeling, extraction/transformation/load processes, data quality problems, datamarts, operational data stores (ODS), staging databases, and online analytic processing (OLAP)., domains: [Data, Business Intelligence], skills_associated: [ai, data analysis, databases, operating systems, project management, software design, user experience], id: 4818e697-8aae-4a17-86d1-c938fd3c0270})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: DAMG7290, major: DAMG, updated_at: 2025-07-05T21:26:02.020000000Z, credits: 3, name: Data Warehousing and Business Intelligence, description: Examines the technical and management aspects of building a data warehouse. Explores the architecture, infrastructure, processes, data quality, database design, and data analysis involved in building the data warehouse for business analysis. Management issues include business goals, tool selection, project management, personnel skills, training, and user requirements. Topics include dimensional data modeling, extraction/transformation/load processes, data quality problems, datamarts, operational data stores (ODS), staging databases, and online analytic processing (OLAP)., domains: [Data, Business Intelligence], skills_associated: [ai, data analysis, databases, operating systems, project management, software design, user experience], id: 4818e697-8aae-4a17-86d1-c938fd3c0270})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6210, major: DAMG, updated_at: 2025-07-05T21:26:01.593000000Z, credits: 3, name: Data Management and Database Design, description: Studies design of information systems from a data perspective for engineering and business applications; data modeling, including entity-relationship (E-R) and object approaches; user-centric information requirements and data sharing; fundamental concepts of database management systems (DBMS) and their applications; alternative data models, with emphasis on relational design; SQL; data normalization; data-driven application design for personal computer, server-based, enterprise-wide, and Internet databases; and distributed data applications., domains: [Data, Information System], skills_associated: [backend, databases, user experience], id: 1ec367c4-7cee-4eef-a66e-7eb0dd73cabe})"
"(:Course {course_id: DAMG7290, major: DAMG, updated_at: 2025-07-05T21:26:02.020000000Z, credits: 3, name: Data Warehousing and Business Intelligence, description: Examines the technical and management aspects of building a data warehouse. Explores the architecture, infrastructure, processes, data quality, database design, and data analysis involved in building the data warehouse for business analysis. Management issues include business goals, tool selection, project management, personnel skills, training, and user requirements. Topics include dimensional data modeling, extraction/transformation/load processes, data quality problems, datamarts, operational data stores (ODS), staging databases, and online analytic processing (OLAP)., domains: [Data, Business Intelligence], skills_associated: [ai, data analysis, databases, operating systems, project management, software design, user experience], id: 4818e697-8aae-4a17-86d1-c938fd3c0270})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG7275, major: DAMG, updated_at: 2025-07-05T21:26:01.939000000Z, credits: 3, name: Advanced Database Management Systems, description: Introduces the skill set required to become a serious database applications developer. Offers an overview of the Oracle9i object-relational database system for those who have mastered the fundamental principles of database design and are competent with basic SQL. Gives students the opportunity to develop a strong understanding of the PL/SQL programming language, which is used to create triggers, user-generated functions, stored procedures, and packages for programming Oracle objects. Emphasizes advanced SQL features and Oracle-specific SQL enhancements. Covers optimization and tuning issues. Covers corresponding material for Transact-SQL (used for Microsoft SQL Server and Sybase database systems) as time and resources permit., domains: [Data, Database Management System], skills_associated: [backend, databases, operating systems, performance, user experience], id: 4eac1333-974e-45e1-a6b5-439564775e3b})"
"(:Course {course_id: DAMG7325, major: DAMG, updated_at: 2025-07-05T21:26:02.101000000Z, credits: 3, name: Introduction to Information Technology Auditing, description: Designed to provide a foundation for the study and professional career development of information technology (IT) auditing. Introduces the fundamentals of IT auditing, core reasons why this is a specialized area of auditing, and the principle objectives of IT auditing and its relationship to integrated financial or operational auditing. Offers an insight into management€˜s objectives regarding IT risk management. Uses the Cobit governance and control framework to emphasize management issues regarding control of IT and the achievement of value through managed IT processes. Introduces three primary types of IT audits: the audits of computerized information systems, IT processing environments, and the process of developing and implementing information systems., domains: [Software Development, Auditing], skills_associated: [operating systems], id: f7c99fee-485b-4ea1-b1bb-756ba6de8c15})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6105, major: DAMG, updated_at: 2025-07-05T21:26:00.503000000Z, credits: 3, name: Data Science Engineering with Python, description: Studies the Python programming language with data science as the application domain. Offers students an opportunity to learn how to perform complex numerical calculations, fixed data types, space efficiency, and vector manipulations. Covers tools and techniques for manipulating tables, spreadsheets, and group and pivot tables involving extremely large data sets. Covers large multidimensional arrays and matrices and the high-level mathematical functions to operate on these arrays. Studies how to use Python to manipulate the classic math and science algorithms. Analyzes helper functions such as linear and nonlinear regression, integration, Fourier transformations, numerical optimization, etc. Includes higher-level classes for manipulating and visualizing data. Applies tools and techniques to classical data science using cases such as time series forecasting, social network analysis, text analytics, and big data processing., domains: [Data, AI/ML], skills_associated: [ai, big data, data analysis, data structures, machine learning, networking, operating systems, performance, python], id: d03a9e23-ffc0-4da9-a0f0-af56fbd6599c})"
"(:Course {course_id: DAMG7325, major: DAMG, updated_at: 2025-07-05T21:26:02.101000000Z, credits: 3, name: Introduction to Information Technology Auditing, description: Designed to provide a foundation for the study and professional career development of information technology (IT) auditing. Introduces the fundamentals of IT auditing, core reasons why this is a specialized area of auditing, and the principle objectives of IT auditing and its relationship to integrated financial or operational auditing. Offers an insight into management€˜s objectives regarding IT risk management. Uses the Cobit governance and control framework to emphasize management issues regarding control of IT and the achievement of value through managed IT processes. Introduces three primary types of IT audits: the audits of computerized information systems, IT processing environments, and the process of developing and implementing information systems., domains: [Software Development, Auditing], skills_associated: [operating systems], id: f7c99fee-485b-4ea1-b1bb-756ba6de8c15})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6210, major: DAMG, updated_at: 2025-07-05T21:26:01.593000000Z, credits: 3, name: Data Management and Database Design, description: Studies design of information systems from a data perspective for engineering and business applications; data modeling, including entity-relationship (E-R) and object approaches; user-centric information requirements and data sharing; fundamental concepts of database management systems (DBMS) and their applications; alternative data models, with emphasis on relational design; SQL; data normalization; data-driven application design for personal computer, server-based, enterprise-wide, and Internet databases; and distributed data applications., domains: [Data, Information System], skills_associated: [backend, databases, user experience], id: 1ec367c4-7cee-4eef-a66e-7eb0dd73cabe})"
"(:Course {course_id: DAMG7350, major: DAMG, updated_at: 2025-07-05T21:26:02.199000000Z, credits: 3, name: Systems and Cybersecurity Fundamentals, description: Presents the principles of data and technology that define systems and cybersecurity from a socio-technical perspective. Offers students an opportunity to gain insight into the importance of systems security within cybersecurity and the integral role that information systems analysts play in developing cybersecure systems that people use. Through hands-on dynamic learning, students explore foundational cybersecurity principles, security architecture, risk management, attacks and mitigation strategies using Kali Linux, cyber incident response, and emerging IT/IS technologies., domains: [Software Development, Cybersecurity], skills_associated: [ai, linux, security, software design, user experience], id: 957378f3-c76e-40c8-a7fb-74a28a7767f5})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6105, major: DAMG, updated_at: 2025-07-05T21:26:00.503000000Z, credits: 3, name: Data Science Engineering with Python, description: Studies the Python programming language with data science as the application domain. Offers students an opportunity to learn how to perform complex numerical calculations, fixed data types, space efficiency, and vector manipulations. Covers tools and techniques for manipulating tables, spreadsheets, and group and pivot tables involving extremely large data sets. Covers large multidimensional arrays and matrices and the high-level mathematical functions to operate on these arrays. Studies how to use Python to manipulate the classic math and science algorithms. Analyzes helper functions such as linear and nonlinear regression, integration, Fourier transformations, numerical optimization, etc. Includes higher-level classes for manipulating and visualizing data. Applies tools and techniques to classical data science using cases such as time series forecasting, social network analysis, text analytics, and big data processing., domains: [Data, AI/ML], skills_associated: [ai, big data, data analysis, data structures, machine learning, networking, operating systems, performance, python], id: d03a9e23-ffc0-4da9-a0f0-af56fbd6599c})"
"(:Course {course_id: DAMG7350, major: DAMG, updated_at: 2025-07-05T21:26:02.199000000Z, credits: 3, name: Systems and Cybersecurity Fundamentals, description: Presents the principles of data and technology that define systems and cybersecurity from a socio-technical perspective. Offers students an opportunity to gain insight into the importance of systems security within cybersecurity and the integral role that information systems analysts play in developing cybersecure systems that people use. Through hands-on dynamic learning, students explore foundational cybersecurity principles, security architecture, risk management, attacks and mitigation strategies using Kali Linux, cyber incident response, and emerging IT/IS technologies., domains: [Software Development, Cybersecurity], skills_associated: [ai, linux, security, software design, user experience], id: 957378f3-c76e-40c8-a7fb-74a28a7767f5})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6210, major: DAMG, updated_at: 2025-07-05T21:26:01.593000000Z, credits: 3, name: Data Management and Database Design, description: Studies design of information systems from a data perspective for engineering and business applications; data modeling, including entity-relationship (E-R) and object approaches; user-centric information requirements and data sharing; fundamental concepts of database management systems (DBMS) and their applications; alternative data models, with emphasis on relational design; SQL; data normalization; data-driven application design for personal computer, server-based, enterprise-wide, and Internet databases; and distributed data applications., domains: [Data, Information System], skills_associated: [backend, databases, user experience], id: 1ec367c4-7cee-4eef-a66e-7eb0dd73cabe})"
"(:Course {course_id: DAMG7370, major: DAMG, updated_at: 2025-07-05T21:26:02.276000000Z, credits: 3, name: Designing Advanced Data Architectures for Business Intelligence, description: Focuses on designing advanced data architectures supporting structured, unstructured, and semistructured data sources; hybrid integration and data engineering; and analytical uses by casual information consumers, power users, and data scientists. Technologies include databases (relational, columnar, in-memory, and NoSQL); hybrid data, application, and cloud integration; data preparation; data virtualization; descriptive, diagnostic, predictive, and prescriptive analytics; and on-premise and on-cloud deployments. Topics include data structures, data models, data integration workflow and data engineering, data integration, data preparation, and data virtualization., domains: [Data, Business Intelligence], skills_associated: [cloud computing, data structures, databases, operating systems, software design], id: f2b55290-c5f4-4967-9080-ac091f188787})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6210, major: DAMG, updated_at: 2025-07-05T21:26:01.593000000Z, credits: 3, name: Data Management and Database Design, description: Studies design of information systems from a data perspective for engineering and business applications; data modeling, including entity-relationship (E-R) and object approaches; user-centric information requirements and data sharing; fundamental concepts of database management systems (DBMS) and their applications; alternative data models, with emphasis on relational design; SQL; data normalization; data-driven application design for personal computer, server-based, enterprise-wide, and Internet databases; and distributed data applications., domains: [Data, Information System], skills_associated: [backend, databases, user experience], id: 1ec367c4-7cee-4eef-a66e-7eb0dd73cabe})"
"(:Course {course_id: DAMG7390, major: DAMG, updated_at: 2025-07-05T21:26:02.361000000Z, credits: 3, name: Advances in Hybrid Data Integration and Engineering, description: Offers students an opportunity to understand concepts on integration use cases, integration processes and personae, data governance (with privacy and security), and data management, in an era when enterprises are increasingly adding, expanding, and altering data sources. While gathering data is often straightforward, enterprises struggle to integrate, cleanse, curate, transform, and govern data to deliver comprehensive and consistent data to support operations and enable analytics. Covers real-world integration use cases that present data fragmentation, data inconsistency, and data quality challenges and effective architectures needed to design, develop, and implement hybrid integration platforms. Studies how to apply theory and best and pragmatic practices with various technologies to implement hybrid integration platform solutions., domains: [Data, nan], skills_associated: [ai, operating systems, security, software design], id: 125bbfb4-c8a2-40af-9f7c-983155c0a579})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG7370, major: DAMG, updated_at: 2025-07-05T21:26:02.276000000Z, credits: 3, name: Designing Advanced Data Architectures for Business Intelligence, description: Focuses on designing advanced data architectures supporting structured, unstructured, and semistructured data sources; hybrid integration and data engineering; and analytical uses by casual information consumers, power users, and data scientists. Technologies include databases (relational, columnar, in-memory, and NoSQL); hybrid data, application, and cloud integration; data preparation; data virtualization; descriptive, diagnostic, predictive, and prescriptive analytics; and on-premise and on-cloud deployments. Topics include data structures, data models, data integration workflow and data engineering, data integration, data preparation, and data virtualization., domains: [Data, Business Intelligence], skills_associated: [cloud computing, data structures, databases, operating systems, software design], id: f2b55290-c5f4-4967-9080-ac091f188787})"
"(:Course {course_id: DAMG7986, major: DAMG, updated_at: 2025-07-05T21:26:02.464000000Z, credits: 3, name: Research, description: Offers students an opportunity to conduct full-time research under faculty supervision., domains: [Data, Research], skills_associated: [research], id: 0312cfa9-3add-478e-a84d-0fa4bb6aa409})",null,null
"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})",null,null
"(:Course {course_id: CSYE6202, major: CSYE, updated_at: 2025-07-05T21:25:55.631000000Z, credits: 3, name: Concepts of Object-Oriented Design with C#, description: Introduces object-oriented design and programming via the C# (C-sharp) programming language and its underlying .NET platform. Covers the use of inheritance and composition in software design and development of complex C# .NET applications. Topics include classes, overloading, data abstraction, information hiding, encapsulation, inheritance, polymorphism, file processing, templates, exceptions, container classes, and low-level language features., domains: [Software Development, nan], skills_associated: [ai, operating systems, software design], id: cd0421b4-0c06-4f67-a051-bae9e2bef956})",null,null
"(:Course {course_id: CSYE6205, major: CSYE, updated_at: 2025-07-05T21:25:55.721000000Z, credits: 3, name: Concepts of Object-Oriented Design with C++, description: Introduces object-oriented design and programming via the C++ programming language. Covers the use of inheritance and composition in software design and development of complex C++ applications. Topics include classes, overloading, data abstraction, information hiding, encapsulation, inheritance, polymorphism, file processing, templates, exceptions, container classes, and low-level language features. Requires a course project., domains: [Software Development, nan], skills_associated: [ai, operating systems, software design, user experience], id: e92fc9aa-1f1f-47de-943c-2ca4a73097bb})",null,null
"(:Course {course_id: CSYE6220, major: CSYE, updated_at: 2025-07-05T21:25:55.815000000Z, credits: 3, name: Enterprise Software Design, description: Designed to build on previous experience in concepts of object-oriented design courses with equal focus in the three areas of architecture, design, and implementation. Instruction and hands-on exercises cover both server-side and client-side web programming. Offers students an opportunity to build a conceptual understanding and to gain practical experience with popular frameworks (Spring MVC, Hibernate, and Dojo or jQuery) that increase productivity, empower developers, and greatly simplify web development. The goal is to be able to build the server side and client side of substantial web-based, client-server, database-intensive, multitier applications., domains: [Software Development, nan], skills_associated: [ai, backend, databases, hibernate, mvc, software design, spring, user experience, web development], id: 2d8a6f61-25d7-4de2-af18-8ba91be2b508})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: CSYE6220, major: CSYE, updated_at: 2025-07-05T21:25:55.815000000Z, credits: 3, name: Enterprise Software Design, description: Designed to build on previous experience in concepts of object-oriented design courses with equal focus in the three areas of architecture, design, and implementation. Instruction and hands-on exercises cover both server-side and client-side web programming. Offers students an opportunity to build a conceptual understanding and to gain practical experience with popular frameworks (Spring MVC, Hibernate, and Dojo or jQuery) that increase productivity, empower developers, and greatly simplify web development. The goal is to be able to build the server side and client side of substantial web-based, client-server, database-intensive, multitier applications., domains: [Software Development, nan], skills_associated: [ai, backend, databases, hibernate, mvc, software design, spring, user experience, web development], id: 2d8a6f61-25d7-4de2-af18-8ba91be2b508})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6202, major: CSYE, updated_at: 2025-07-05T21:25:55.631000000Z, credits: 3, name: Concepts of Object-Oriented Design with C#, description: Introduces object-oriented design and programming via the C# (C-sharp) programming language and its underlying .NET platform. Covers the use of inheritance and composition in software design and development of complex C# .NET applications. Topics include classes, overloading, data abstraction, information hiding, encapsulation, inheritance, polymorphism, file processing, templates, exceptions, container classes, and low-level language features., domains: [Software Development, nan], skills_associated: [ai, operating systems, software design], id: cd0421b4-0c06-4f67-a051-bae9e2bef956})"
"(:Course {course_id: CSYE6220, major: CSYE, updated_at: 2025-07-05T21:25:55.815000000Z, credits: 3, name: Enterprise Software Design, description: Designed to build on previous experience in concepts of object-oriented design courses with equal focus in the three areas of architecture, design, and implementation. Instruction and hands-on exercises cover both server-side and client-side web programming. Offers students an opportunity to build a conceptual understanding and to gain practical experience with popular frameworks (Spring MVC, Hibernate, and Dojo or jQuery) that increase productivity, empower developers, and greatly simplify web development. The goal is to be able to build the server side and client side of substantial web-based, client-server, database-intensive, multitier applications., domains: [Software Development, nan], skills_associated: [ai, backend, databases, hibernate, mvc, software design, spring, user experience, web development], id: 2d8a6f61-25d7-4de2-af18-8ba91be2b508})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6205, major: CSYE, updated_at: 2025-07-05T21:25:55.721000000Z, credits: 3, name: Concepts of Object-Oriented Design with C++, description: Introduces object-oriented design and programming via the C++ programming language. Covers the use of inheritance and composition in software design and development of complex C++ applications. Topics include classes, overloading, data abstraction, information hiding, encapsulation, inheritance, polymorphism, file processing, templates, exceptions, container classes, and low-level language features. Requires a course project., domains: [Software Development, nan], skills_associated: [ai, operating systems, software design, user experience], id: e92fc9aa-1f1f-47de-943c-2ca4a73097bb})"
"(:Course {course_id: CSYE6225, major: CSYE, updated_at: 2025-07-05T21:25:55.918000000Z, credits: 3, name: Network Structures and Cloud Computing, description: Offers a practical foundation in cloud computing and hands-on experience with the tools used in cloud computing. Designed as a foundation course for cloud-aware, adept professionals. Focuses on the fundamentals of cloud computing, the principal areas of cloud architectures, cloud security, cloud governance, cloud storage, cloud virtualization, and cloud capacity. Discusses the Internet evolution that led to cloud and how cloud applications revolutionized Web applications., domains: [Cloud Computing, Software Development], skills_associated: [cloud computing, networking, security, software design, web development], id: 5ee36a01-7057-4bd7-a167-7da510856953})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO5100, major: INFO, updated_at: 2025-07-05T21:25:58.118000000Z, credits: 3, name: Application Engineering and Development, description: Takes students in a step-by-step manner through the process of systematically combining UX techniques, business processes, and complex data models to assemble applications that are user-friendly and meet business requirements. Employs the object-oriented paradigm, visual user experience, and system design principles to put together complicated, powerful, real-world applications. The primary objective of this course is to practice social-technical software engineering methods and tools to solve real-world problems. Offers students an opportunity to learn innovative design and programming techniques to build significant business applications quickly; to practice simple and smart ways of making software construction enjoyable; and to master the art of how to systematically write software programs to solve any business problem., domains: [Software Development, nan], skills_associated: [operating systems, software engineering, user experience], id: 771dbcb0-e686-4a27-94a6-1f5ac3583d69})"
"(:Course {course_id: CSYE6225, major: CSYE, updated_at: 2025-07-05T21:25:55.918000000Z, credits: 3, name: Network Structures and Cloud Computing, description: Offers a practical foundation in cloud computing and hands-on experience with the tools used in cloud computing. Designed as a foundation course for cloud-aware, adept professionals. Focuses on the fundamentals of cloud computing, the principal areas of cloud architectures, cloud security, cloud governance, cloud storage, cloud virtualization, and cloud capacity. Discusses the Internet evolution that led to cloud and how cloud applications revolutionized Web applications., domains: [Cloud Computing, Software Development], skills_associated: [cloud computing, networking, security, software design, web development], id: 5ee36a01-7057-4bd7-a167-7da510856953})",[:PREREQUISITE {type: OR}],"(:Course {course_id: CSYE6200, major: CSYE, updated_at: 2025-07-05T21:25:55.492000000Z, credits: 3, name: Concepts of Object-Oriented Design, description: Introduces object-oriented design and programming via the Java programming language; the use of inheritance, composition, and interface classes in software design; development of Java applets and applications; study of the Java class libraries, including the swing tool kit for building human computer interfaces, the network package for development of client-server systems, and the collections package for data structures and sorting algorithms. Requires a course project. Requires knowledge of C programming., domains: [Software Development, nan], skills_associated: [backend, data structures, java, networking, operating systems, software design, user experience], id: 986b6bf4-3851-409f-84fd-06bdaf7e2ee6})"
"(:Course {course_id: CSYE6230, major: CSYE, updated_at: 2025-07-05T21:25:56.008000000Z, credits: 3, name: Operating Systems, description: Covers basic concepts of operating systems and system programming, such as utility programs, subsystems, and multiple-program systems. Main topics include processes, interprocess communication, and synchronization; memory allocation, segmentation, and paging; loading, linking, and libraries; resource allocation, scheduling, and performance evaluation; file systems, storage devices, and I/O systems; and protection, security, and privacy. Emphasizes key concepts through code design and development., domains: [Theoretical CS, Software Development], skills_associated: [ai, operating systems, performance, security], id: 5ee91eec-51b8-4290-b9e4-508649abea29})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: CSYE6305, major: CSYE, updated_at: 2025-07-05T21:25:56.104000000Z, credits: 3, name: Introduction to Quantum Computing with Applications, description: Addresses how scientists and engineers can use quantum computers to simulate large quantum mechanical systems easily, which is crucial in discovery of new lifesaving drugs and new efficient materials. Quantum computers maintain an abstract state where both 0 and 1 states exist simultaneously with some probability. The course delves deeper into how such an abstract state can be realized physically and used as a computing tool to simplify algorithm implementation and execution. Offers students an opportunity to learn about the latest breakthroughs in cryptography systems (RSA), as well as fast database search; accurate weather forecasting; ultrasecure communication; and fast image recognition., domains: [Advanced, Quantum Computing, Software Development], skills_associated: [ai, databases, security, statistics], id: 284b5d59-8d34-4d31-b361-1676b2fe107d})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6205, major: INFO, updated_at: 2025-07-05T21:25:58.736000000Z, credits: 3, name: Program Structure and Algorithms, description: Presents data structures and related algorithms, beginning with a brief review of dynamic memory allocation. Discusses the fundamental data structures in detail, including the abstract representation, supporting algorithms, and implementation methods. Focuses on understanding the application of the abstract data structure and the circumstances that affect implementation decisions. Covers lists, stacks, queues, trees, hash tables, and graphs. Covers recursion and searching and sorting algorithms in detail. Emphasizes data abstraction and encapsulation in code design. Explores external storage structures, time permitting., domains: [nan, Software Development], skills_associated: [ai, data structures, data visualization], id: 07fe0386-70e7-416e-8b43-f244197ade79})"
"(:Course {course_id: CSYE6700, major: CSYE, updated_at: 2025-07-05T21:25:56.184000000Z, credits: 3, name: Technical Writing and Professional Development, description: Emphasizes professional communication skills through intensive verbal practice and technical writing application. Students work together in groups and individually to practice verbal and written communication to increase their English competency and comfort level for work in the United States. Offers students an opportunity to develop their ability to communicate technical skills sets in a professional setting. This course does not count toward graduation requirements., domains: [Research, nan], skills_associated: [user experience], id: a3287c44-3c07-412c-b2d9-c7bce65ae7f8})",null,null
"(:Course {course_id: CSYE7105, major: CSYE, updated_at: 2025-07-05T21:25:56.310000000Z, credits: 3, name: High-Performance Parallel Machine Learning and AI, description: Explores the parallelization of machine learning and deep learning code that leads to high performance on heterogeneous cluster architectures. Includes the applications to a variety of domains, including image classification, speech recognition, and natural language processing, etc. Covers a brief overview of the emerging parallel computing applications. Analyzes system architectures for different kinds of parallel computing systems (shared-memory system, distributed-memory system, accelerator system, and hybrid). Offers students an opportunity to practice the principles and the practice of the emerging parallelism-based machine-learning paradigm., domains: [AI/ML/NLP, Parallel computing], skills_associated: [ai, concurrency, machine learning, operating systems, performance, software design], id: 22c3e18d-03b9-49d0-8168-d6cc7b4ba317})",[:PREREQUISITE {type: OR}],"(:Course {course_id: INFO6105, major: INFO, updated_at: 2025-07-05T21:25:58.334000000Z, credits: 3, name: Data Science Engineering Methods and Tools, description: Introduces the fundamental techniques for machine learning and data science engineering. Discusses a variety of machine learning algorithms, along with examples of their implementation, evaluation, and best practices. Lays the foundation of how learning models are derived from complex data pipelines, both algorithmically and practically. Topics include supervised learning (parametric/nonparametric algorithms, support vector machines, kernels, neural networks, deep learning) and unsupervised learning (clustering, dimensionality reduction, recommender systems). Based on numerous real-world case studies., domains: [Data, AI/ML], skills_associated: [data analysis, data structures, machine learning, networking], id: 0db048a9-3dcf-425e-adde-379b62f6c64d})"
"(:Course {course_id: CSYE7105, major: CSYE, updated_at: 2025-07-05T21:25:56.310000000Z, credits: 3, name: High-Performance Parallel Machine Learning and AI, description: Explores the parallelization of machine learning and deep learning code that leads to high performance on heterogeneous cluster architectures. Includes the applications to a variety of domains, including image classification, speech recognition, and natural language processing, etc. Covers a brief overview of the emerging parallel computing applications. Analyzes system architectures for different kinds of parallel computing systems (shared-memory system, distributed-memory system, accelerator system, and hybrid). Offers students an opportunity to practice the principles and the practice of the emerging parallelism-based machine-learning paradigm., domains: [AI/ML/NLP, Parallel computing], skills_associated: [ai, concurrency, machine learning, operating systems, performance, software design], id: 22c3e18d-03b9-49d0-8168-d6cc7b4ba317})",[:PREREQUISITE {type: OR}],"(:Course {course_id: DAMG6105, major: DAMG, updated_at: 2025-07-05T21:26:00.503000000Z, credits: 3, name: Data Science Engineering with Python, description: Studies the Python programming language with data science as the application domain. Offers students an opportunity to learn how to perform complex numerical calculations, fixed data types, space efficiency, and vector manipulations. Covers tools and techniques for manipulating tables, spreadsheets, and group and pivot tables involving extremely large data sets. Covers large multidimensional arrays and matrices and the high-level mathematical functions to operate on these arrays. Studies how to use Python to manipulate the classic math and science algorithms. Analyzes helper functions such as linear and nonlinear regression, integration, Fourier transformations, numerical optimization, etc. Includes higher-level classes for manipulating and visualizing data. Applies tools and techniques to classical data science using cases such as time series forecasting, social network analysis, text analytics, and big data processing., domains: [Data, AI/ML], skills_associated: [ai, big data, data analysis, data structures, machine learning, networking, operating systems, performance, python], id: d03a9e23-ffc0-4da9-a0f0-af56fbd6599c})"